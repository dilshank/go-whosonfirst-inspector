// Code generated by go-bindata.
// sources:
// www/index.html
// www/javascript/mapzen.whosonfirst.catalog.init.js
// www/javascript/mapzen.whosonfirst.catalog.js
// www/javascript/mapzen.whosonfirst.render.js
// www/css/mapzen.whosonfirst.catalog.css
// www/css/mapzen.whosonfirst.render.css
// DO NOT EDIT!

package http

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wwwIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\x3d\xee\xdb\x30\x0c\xc5\xe7\xe4\x14\x04\x97\x6e\xd1\x05\x24\x2f\x6d\x03\x14\x28\x90\xa1\x43\xc6\x42\xb1\xe8\x5a\x89\x2c\xb9\x12\xe5\xd4\x3d\x7d\x61\xcb\xf9\x2a\xb2\xe5\x1f\x2f\x96\x1f\xe9\x1f\x1f\x09\x4a\xb6\xdc\xb9\x6a\x0d\x20\x5b\xd2\x66\x3a\x00\x48\xb6\xec\xa8\xda\xb7\xe1\x53\x82\x9d\x87\xad\x8d\x89\xe1\xb3\x66\xed\xc2\x2f\xf8\xd1\x93\xcb\xfe\x44\x51\x8a\x92\x57\xfe\x71\xd6\x9f\x80\xc7\x9e\x14\x32\xfd\x61\x51\xa7\x84\x10\xc9\x29\x4c\x3c\x3a\x4a\x2d\x11\x23\xb4\x91\x1a\x85\x75\x4a\xa2\xd3\xfd\x5f\xf2\x9b\x63\xda\xcc\x99\xe2\x35\xcc\xb9\x0d\x29\xf8\x66\x32\xba\xa9\x8b\xd1\x0f\xe7\x46\xf2\x86\xe2\x23\x36\xd5\xd1\xf6\x7c\x0f\x3e\xea\x41\x17\x15\x21\xc5\x5a\xe1\x4d\xb8\x40\x3b\x3b\xf5\x8d\x95\x14\x45\x7f\x85\xf5\xc4\xe0\x3b\xd0\x97\x99\xbe\x93\x6d\xbd\xe5\xc7\x02\xb0\x3c\xd3\x7a\x8a\xcb\x7e\xca\x43\x30\xe3\x52\xdb\xd8\x01\xac\x51\x58\x6b\x3f\xe8\x84\x45\xbd\xea\xa0\xf0\x77\xa6\x38\x62\xb5\x5e\xc9\x26\xc4\xae\x5a\xaf\x00\xa4\xf5\x7d\xbe\xf7\x8b\x33\xe2\x1c\x9a\x9f\xd6\x20\x78\xdd\xd1\xed\x6b\xd0\x2e\x93\x42\x84\xde\xe9\x9a\xda\xe0\x0c\x45\x85\x5f\x3d\x53\x04\x0d\xfb\xdd\x16\xbe\x7d\x99\xb7\x61\x02\x1f\x32\x73\xf0\x0b\x39\xe5\x43\x67\x17\xb6\x0b\xe1\x94\x7b\xac\xbe\xcf\x6f\x29\x4a\xe2\xe4\x4a\x14\x5b\x8b\x6d\x61\xec\xf0\x5f\x0f\x0a\x0d\xb1\xb6\x6e\x1e\xcb\xb3\x70\xa4\x94\x1d\x3f\x86\xaf\x47\x29\xca\xb0\xa4\x28\xd7\xfc\x5f\x00\x00\x00\xff\xff\xfe\xdf\xf9\xa7\xee\x03\x00\x00")

func wwwIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwIndexHtml,
		"www/index.html",
	)
}

func wwwIndexHtml() (*asset, error) {
	bytes, err := wwwIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/index.html", size: 1006, mode: os.FileMode(420), modTime: time.Unix(1506703999, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstCatalogInitJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xc1\x6a\xc3\x30\x10\x44\xcf\xeb\xaf\x58\x7c\x92\x21\xe8\x07\x4c\x0e\x6d\x09\x34\xd0\x63\xa1\xc7\xa2\x4a\xeb\x44\x44\x59\x19\x69\x15\x93\x86\xfc\x7b\x91\x6d\x9a\x5b\x4e\xd2\xa2\x99\xc7\x8c\x76\xf2\xec\xe2\xa4\x8d\x73\xbb\x0b\xb1\x7c\xf8\x2c\xc4\x94\x54\x1b\xa2\x71\xed\x06\x87\xc2\x56\x7c\x64\xac\xb3\xa2\xaa\xe9\x6e\x0d\x34\x70\x31\x09\x7f\x8a\x48\x64\xdc\xa2\x8b\xb6\x9c\x89\x45\x1f\x48\x76\x81\xea\xf5\xf5\xba\x77\x95\x12\x4f\x65\x6c\xbb\xbe\x5a\x16\xb9\x8e\x6c\x83\xb7\x27\xdc\xfe\xc3\x55\x77\x6b\x1a\x00\x49\x57\xbc\x35\x88\x88\x00\x33\xdf\xbb\x67\xec\x29\x0e\xdf\xde\xcd\x6c\x80\x59\x3a\x9a\x94\x69\xcf\xa2\xbc\xd3\x17\x13\x0a\x75\x7d\xe5\xc2\xd9\x8c\xbf\xc4\x7a\x3a\xc6\x1c\x79\xf0\x29\x8b\xb6\x46\x4c\x88\x07\xbd\x04\x54\xde\x3d\xaa\xaa\x94\xc7\x25\xd0\x92\x22\xe1\x16\x9f\x10\x12\xb1\xa3\x34\x9b\xe6\x24\xf0\x30\x52\x2e\x41\xf2\xb3\x0e\xab\x64\x2d\x01\xeb\xa8\xcd\x38\x12\xbb\xb7\xa3\x0f\x4e\xa5\xe5\xed\x3e\x1f\xf7\x1a\xcb\x1a\xb1\x47\x54\x54\x17\x01\x60\x23\xe7\x18\x48\x87\x78\x50\xed\xd7\xfb\xcb\x67\xbb\x41\x5a\xc5\x00\xeb\x77\x26\x92\x92\x18\x07\x13\x32\xf5\x0d\xdc\xfb\xa6\xf2\xfe\x02\x00\x00\xff\xff\xae\xcc\x05\x3a\xfd\x01\x00\x00")

func wwwJavascriptMapzenWhosonfirstCatalogInitJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstCatalogInitJs,
		"www/javascript/mapzen.whosonfirst.catalog.init.js",
	)
}

func wwwJavascriptMapzenWhosonfirstCatalogInitJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstCatalogInitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.catalog.init.js", size: 509, mode: os.FileMode(420), modTime: time.Unix(1505838717, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstCatalogJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\x5f\x73\xe3\xb6\x11\x7f\x96\x3e\x05\x8e\x2f\x26\xc7\x32\x95\xb4\x7d\x8a\xaa\x87\x34\xa3\xcb\x35\xf5\xd9\x1d\x5b\xcd\xb4\xa3\xd1\x68\x60\x72\x25\xa1\x47\x11\x3c\x00\x3c\x9d\x7a\xf1\x77\xef\x2c\xfe\x11\x94\x68\x89\x4a\xfc\x60\x9b\xe0\xef\xb7\xbb\xd8\xbf\x04\xbe\x50\x41\x76\xb4\xfa\x1f\x94\x64\xea\xfe\xf9\xed\x37\xf2\xed\x75\x32\x34\x4f\xe9\x7e\xcb\x25\x2f\xd7\x4c\x48\xe5\x21\xad\x45\x0b\xef\xc0\xa7\x19\x55\xb4\xe0\x1b\x32\x25\xf1\xba\x2e\x33\xc5\x78\x19\x27\xdf\x86\x43\x42\x08\x41\xcd\x19\xcd\xb6\x40\xa6\x86\xef\x16\x25\x14\x6b\x5c\x1b\x0e\x86\x83\x9b\x82\xf3\x4f\x75\x75\xf3\x03\xf1\x7c\x96\x8f\x48\xf6\x92\x7c\x1b\x0e\x90\x60\x7e\x23\xad\x12\x5c\x71\x32\x25\x39\xcf\xea\x1d\x94\x2a\x2d\x78\x46\x91\x91\xea\x37\x19\x2f\x26\x0d\xb8\x16\x05\x99\x5a\xca\x2d\xb9\x19\x8f\x6f\xc8\x2d\xf1\x84\x2d\x97\x2a\x7c\xae\xa8\xda\x96\x74\x07\x08\x65\xb9\xc6\xb2\x7c\x72\x6c\x00\x2f\x0b\x4e\x73\x32\x6d\x4c\x15\xb2\x42\x3b\x07\xc3\xc1\x00\x01\x8a\x8a\x0d\xa0\x13\x85\xac\x52\xf3\x30\x31\x6f\xd9\x9a\xc4\x66\x21\x15\x40\xf3\xc3\xb3\xa2\x0a\xc8\xbb\x29\xf9\x8b\xe6\xa3\x06\x01\xaa\x16\x25\xe2\x5f\x1b\x89\x52\x51\x55\xcb\x55\xc6\x73\xf4\xa2\x91\xb0\xb8\x31\xab\x37\x4b\x04\xb7\x70\x0a\xbe\xaa\x13\xdc\x1c\xbe\x2a\x83\xb5\x42\x05\xdd\x07\x20\x01\xb2\xe2\xa5\x84\x06\x86\x98\x9c\x2a\x4a\xa6\xa4\xac\x8b\xc2\x32\x95\x38\x10\x67\xab\x7d\xfb\xcb\xf3\xe3\x43\x5a\x51\x21\x21\x16\x74\x9f\x04\xb6\x67\x54\x65\x5b\x12\x83\xdf\x5d\xc6\x4b\xc9\x0b\x48\x0b\xbe\x89\xa3\xd9\xd3\x53\x34\xc2\x10\x8d\x08\x24\xad\xed\x93\x35\x2d\x24\x84\x82\x5e\x62\x54\x96\xd8\x60\xbc\x9e\x04\x45\xc0\x67\xb4\x13\xf6\xe4\xdf\x1f\xef\x3f\x28\x55\x3d\xc1\xe7\x1a\xa4\x8a\x1d\x45\xc0\xe7\x94\xe6\xf9\xec\x0b\x94\xea\x9e\x49\x05\x25\x88\x38\xc2\x48\x46\x23\x1b\xd2\xa4\x25\x15\x09\xbc\x82\x32\x8e\x7e\x9e\xcd\x9d\x9d\x4a\xd4\x10\x4a\x94\x50\xe6\x5a\xc5\xeb\x48\xa7\xb1\x80\x32\x07\x11\xa6\xb1\xcd\x8d\x63\x6b\x33\x2e\x72\x69\x52\x64\x11\xd9\x47\x50\xd1\xd2\x3f\x44\xcb\x20\x8d\x33\x5e\x97\x3a\xa1\xcc\xbb\xb4\x80\x72\xa3\xb6\x27\x4e\x78\x39\xac\xd4\xa1\x72\x85\xe6\x97\x71\x0d\x75\x2d\x42\x91\x92\xd7\x22\x6b\x2f\x9b\xdf\x6b\x2e\x48\x8c\x08\x36\xfd\x6e\x42\x18\xf9\xab\xd1\x3e\x21\xec\xf6\x36\xcc\x72\xd1\xd8\xb3\x60\x3e\x61\xb4\x95\x8b\x08\x55\x46\xcb\x20\xeb\xdf\x39\xe3\x16\x6a\xe9\xb3\xc1\xfe\x69\xde\xa0\x35\x44\x10\x4d\xc4\x37\xda\xf2\xb4\xaa\xe5\x36\x56\x61\x5e\x41\x21\xc1\x67\x61\x43\x37\x48\xe1\x90\x3a\x53\xc2\xad\x19\x71\x92\x8b\x26\x2d\x5a\x09\x39\xff\xcf\x3f\x67\xcf\xd1\xc8\xe0\x92\x13\xf7\x2a\xfa\x52\x40\xd8\x79\x32\x01\x54\xc1\xac\x00\x7c\x8a\x23\xfd\x3e\x3a\xe5\x19\x57\xaf\xb6\x40\x73\x10\xe7\xf8\x5b\x4f\x6e\x51\x52\x5a\x55\x50\xe6\x3f\x6d\x59\x91\xc7\x47\x64\x2c\xd7\x07\x9e\x43\x1c\x19\x4a\x94\x74\xd8\x7d\xa8\xae\xd3\x1e\x10\xfa\xe9\xd6\xe1\xee\xd0\xbc\xa5\x72\x7b\x95\xe6\x80\xd0\x4f\x33\x12\xba\x34\xd7\x82\x5d\xa5\xb8\xc1\xf7\xd3\x5b\x0b\xd6\xe9\x6a\xb6\x63\xe5\xe6\x3a\x67\x87\x94\x9e\xee\xd6\x94\x2e\xfd\x72\xcb\xf7\xd7\x25\x5a\x43\xe8\xa7\xfb\xae\x4b\x6d\x0e\x8a\xb2\x42\x5e\xa5\xb9\xcd\xf9\x03\xca\x8d\x80\x95\xe0\xfb\x73\x8a\x45\x93\x63\x1e\xdf\x52\xda\x2a\xb9\x0b\xd8\xa0\x40\x2e\x20\x83\x84\xbe\x80\x6c\x32\xf0\x92\xf2\x30\x61\x2e\x60\xdb\x4e\x6e\xfb\x4e\xb7\xab\xb6\xb1\x5e\x48\xd2\x3d\x12\x14\x61\xa5\xed\x8e\x76\x12\xe8\xef\x0c\x5c\x58\xa8\x66\x06\xa0\x77\x9a\x11\xd7\xf4\xe7\xe0\xe3\x43\xcf\x94\x00\x14\x72\x9a\xf1\xe6\xd0\x2f\x87\x95\x09\x8f\x1b\x6d\x83\x8e\x11\x86\xe0\x37\x86\x97\x93\xdc\x0c\xb1\x60\xfc\x04\xdf\x39\xa1\x15\x76\xa8\x1d\x01\xbd\x19\xc8\x58\xb8\xa6\xbb\x9c\xe0\x17\x58\x00\xb3\x63\xd8\x80\xec\x30\x3c\x82\xd4\x82\x79\x04\x76\x13\xaf\xad\xe9\x23\x8d\x04\x53\xf0\x4b\x32\x26\xdf\x7f\xe7\x7e\x26\x83\xf1\x98\x94\xb4\xe4\x12\x32\x5e\xe6\xf2\xd4\x58\x4c\x3e\x2f\x43\x77\x4a\x6d\xc5\x5b\xbb\x5a\x65\x50\x14\x97\x8b\x37\x1c\x50\xc8\xe8\x55\xba\x06\x9f\x24\x1d\x2e\xd5\x4e\xbf\xa4\x3a\x6f\x54\x7b\x7c\x2f\xc5\x88\xee\x54\xab\x2b\xf3\x0a\xb5\x1e\xdf\x4b\x2d\xa2\x51\x6d\x3b\xe0\xd7\xe8\x73\xf0\x54\x82\xfa\x51\x29\xc1\x5e\x6a\x05\x71\x84\xc1\xbc\xc3\x7c\xc1\x2f\x52\x96\x4c\x10\x7c\xcc\xe8\x63\x20\x92\x3b\xa3\x61\xba\xcb\x35\xf1\x68\x18\xfd\x22\xa2\xf1\xa9\xe2\xef\xd9\x57\xc8\xe3\x3f\x27\xe4\x96\x44\x32\x3a\xf2\x96\xeb\x5c\x57\x18\x12\x52\x8e\xbc\x96\x15\x54\xca\x68\x44\xa2\xac\x60\xd9\xa7\xbb\x1d\xf4\x62\x9d\xf1\x75\x8b\xd5\x6b\x76\x59\xc6\xf1\x3e\x77\xa0\x68\xaf\xd9\x65\x39\xfa\x08\xa9\xbb\xcb\x94\x44\x20\x04\x17\x91\x6e\x68\x03\x27\xe8\xad\x9d\x5b\xac\xdb\xf6\xab\x13\xe8\x79\x1d\xc3\x10\x77\xe7\x19\x9d\x40\x5f\x8c\xe7\x61\xbe\x78\xce\xc3\x5c\x06\x5f\xd0\xd9\x24\xdc\x79\x60\x18\xa4\xe3\x5c\x6f\x05\x90\x97\x3a\x2f\xc2\x33\xbd\x39\xb3\x62\xaf\xd4\xb3\x06\x30\x09\x21\x38\xcd\x0f\x9a\x1e\x0e\x45\xba\xe9\xce\x9b\xc4\x8e\xa5\x81\x84\x62\x9d\xea\x6f\x2d\xab\x57\xd7\x9f\x8f\xc5\x91\x6d\xe1\x64\x8e\xdd\xce\x9a\x14\xd0\xb7\x29\x8b\x5a\xb0\xa5\x6d\xee\x13\x43\xed\x3a\xf2\xd8\xf3\xb4\x96\x68\x8e\xa9\xc3\xc1\xcd\x96\xe5\xe0\x0c\x09\xcf\xaa\xc9\xb7\xe1\xc9\x37\x5d\x98\x97\x1b\x50\x36\x29\xff\x76\xf8\x7b\x1e\xa4\x74\xfb\x93\x2e\x65\x65\x09\xe2\xc3\xfc\xe3\x3d\x99\x92\x28\x6a\x4e\xc7\xa1\x03\x42\xbd\xe8\x0b\xa7\x5a\x7b\x2a\x34\x30\xd6\x1b\x3f\x1a\xd4\x8d\x0b\x82\x23\xed\x0b\xcf\x0f\x7e\xdc\xe1\x43\xeb\x0c\xdd\x35\x92\xad\xe0\xf1\x98\xfc\xf4\xf8\xf0\xeb\xec\x69\x4e\x7e\xbc\xbf\x27\xf3\x0f\x33\xf2\xf0\x38\xbf\xfb\x79\xf6\xf8\xcb\xf3\xe3\x03\x79\x9e\xff\xeb\xfd\x7b\x32\x7f\x24\x6e\xe1\xc3\xec\x69\x96\xa6\x69\x60\xd6\x5e\x60\xb4\xce\x7d\xf9\xe6\xec\x8b\xf7\x93\x45\x1f\x55\x2a\xcb\xb1\x4c\xdd\x31\x2e\xdc\x74\x25\x78\x25\xdd\x42\xab\x01\x6c\x80\xff\x57\xf2\xd2\xb4\x00\x0d\xeb\xbc\xbb\x4b\xcd\xbd\x84\xfd\xb3\x42\x1f\xc4\xe8\xa0\x45\x84\x1c\x10\x8a\x81\x8c\x96\xfe\x76\xc5\x6a\xb2\xa7\x6c\x77\x6f\xe5\x74\x56\x5c\xaa\x0d\x93\x91\xff\x8e\x32\x92\x3e\x82\xa2\xd1\xb2\x7d\x1d\x14\xbe\xb1\xa7\xf2\xdf\x65\x67\x63\x59\x90\xda\xce\x8b\x61\xc5\x6b\xd1\x49\x10\x57\x74\xdf\x06\xf8\xee\x4a\xb7\x20\x05\x94\x38\x34\x4e\x19\x8f\x3b\x15\x22\xb0\x15\xab\x1d\xad\x7a\x66\xc1\x8e\x56\x9d\x19\xb0\xa3\x55\x3b\xfc\xd7\xdd\x3b\x68\xc6\xd9\x33\x98\x68\x8b\x2f\x60\xad\x7a\x8e\x59\x7f\x7f\xc5\x36\xdb\x9e\x1c\x43\xf2\x3a\x7c\x57\xa3\x95\xbf\x47\xf3\xc2\xdc\x4b\xeb\x68\xcf\x56\x6d\x9f\x7b\x61\xfe\x08\xdd\x7e\xdf\x08\x6c\x24\x9c\x9c\x75\x94\x68\xf7\x95\xdf\xdf\xed\x5a\x52\x51\x8f\x17\xac\x7b\x59\x2e\xe8\x7e\xb5\xa3\x95\xbf\xc0\x34\x3d\xd8\x2d\x87\x7d\x50\x23\xc2\x1e\xbc\x06\xaa\x6a\x01\x6f\x37\x35\x57\x4a\x16\xd8\xae\xe7\xb0\x63\xbc\x33\x50\x5d\xb3\xfe\x8a\x39\x2c\x76\x9d\x09\x54\x99\xdb\xf2\x4a\x9a\x12\xf8\xa1\xa0\x8a\xa9\x3a\x87\x96\xd2\x82\x97\xc7\x30\x5e\x6e\x3c\x4e\x5f\xf0\xbb\x9f\xfb\xf4\xa3\x29\x3b\x5a\xb1\x7f\xc0\x21\xf4\x2f\x6e\xa6\x6b\x70\x9a\x3a\xbd\xa3\x15\xbb\xfb\x04\x87\xe6\x3e\x2d\x14\x6b\xaa\xcc\x0b\x47\xf7\xde\xa0\x33\x93\xc9\x31\x0c\x4b\xec\x57\x06\xfb\x78\x51\x50\x35\x42\xdb\x97\x23\xf2\xfd\x9f\xda\x15\x40\x0f\xba\x77\xdf\xa7\x1b\xe0\xd8\xbe\x62\xeb\x4f\xa7\x5b\x03\x52\x9a\xe7\x73\xee\x32\xf7\x75\x68\x27\xb7\xb7\xcd\x8e\x5a\x0c\xba\x5d\x7d\x4d\xe2\x64\x32\x18\xfe\x3f\x00\x00\xff\xff\xe4\x8a\xc6\xd1\x7c\x19\x00\x00")

func wwwJavascriptMapzenWhosonfirstCatalogJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstCatalogJs,
		"www/javascript/mapzen.whosonfirst.catalog.js",
	)
}

func wwwJavascriptMapzenWhosonfirstCatalogJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstCatalogJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.catalog.js", size: 6524, mode: os.FileMode(420), modTime: time.Unix(1506707054, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstRenderJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x41\x6e\xdb\x3a\x10\x5d\x4b\xa7\x18\xe8\x2f\x22\xc1\xfe\x4a\xfe\x36\x8a\xf0\x11\x14\xdd\x76\xd5\x5d\x11\x04\xb4\x38\xae\x59\xd3\x92\x41\x8e\x63\xa7\x89\x81\xde\xa1\x37\xec\x49\x8a\x21\x29\x59\xb2\x65\x65\x91\x44\x12\xdf\x7b\x33\x9c\x79\x33\xc8\x8b\x30\xb0\x11\xdb\x9f\x58\x43\xd9\x3e\xbc\xbf\xc3\xdb\xb1\x88\xfd\x5b\xbe\x5f\x35\xb6\xa9\x97\xca\x58\xea\x20\x83\x8f\x01\x3e\x82\xcf\x0d\xd6\x12\x0d\x94\x90\x2e\x77\x75\x45\xaa\xa9\xd3\xec\x2d\x8e\x23\x8e\x6a\x51\x2f\xa1\x04\x7e\x8d\x6e\x3c\xf0\x59\x0a\x12\x37\xf7\xd0\x81\xe5\x1c\x2a\x3a\x38\x4a\xe4\x48\x7b\x23\xb6\x5b\xa7\x28\x9b\x6a\xb7\xc1\x9a\xf2\xca\xa0\x20\xfc\xac\x91\xdf\xd2\x44\xaa\x97\x24\x2b\x18\x1f\xb0\xb9\x45\x7a\x24\x32\x6a\xb1\x23\x4c\x93\x4a\x0b\x6b\x93\x39\x24\x72\xb7\xd9\xa2\x61\x6c\x2b\xee\x93\x70\x5c\xfe\x51\x4b\x48\x1f\x8d\x11\xaf\xb9\xb2\xee\x6f\x2a\xb3\xec\x8d\x4f\xa2\xee\x5e\x7c\x89\x70\xcb\x67\xad\x2c\xb5\x19\x3b\x91\x63\x1c\x01\x00\xf0\x23\x6a\x8b\xc0\x82\xf4\xba\xc5\x66\x99\xca\x0c\xca\x12\x92\x66\xf1\x03\x2b\x4a\xa6\x54\xa5\xaa\xce\x55\x3b\x41\x4f\xe3\xd4\xab\xa6\x26\xac\xe9\x8c\x4b\x78\xe8\x71\x87\x31\xae\xd5\xcf\x6e\x45\x9d\x64\x45\x14\x8a\x10\x08\x39\x97\xb2\x96\x9f\x56\x4a\xcb\x34\x04\xeb\xa7\xd3\xd6\xba\x0f\xf3\x4c\x8f\x32\x48\x3b\x53\xb7\xed\x2b\xbc\xf8\x71\x3e\xe8\xbd\xaa\x68\xb4\xf7\x5d\x11\xf9\xa2\x24\x16\x1a\x27\xd2\x77\xe7\xc1\x00\xee\xf9\x5a\xfb\xbd\x90\xfb\xfd\xaf\x44\x12\x4a\x5b\x47\x6b\x83\x2d\x1b\x03\xe9\x1a\x54\x0d\xd2\xb5\xa7\x2b\xb5\x69\xf6\x53\xf1\x4d\x08\xee\xb0\x5a\x2c\x50\xbb\x36\x40\x09\x6b\xff\xbd\x3b\x7c\xae\xe8\xc0\xa3\xc1\xb7\x84\xff\xf9\xb2\x30\x83\x24\x4f\x60\x06\x6b\xb8\xbf\x80\xaf\x50\x4c\x77\x8e\x56\x17\xa1\x2f\xd1\x5f\xf1\x40\x5f\x1a\x89\xe9\x29\xb5\x40\xf2\xfa\x83\x0e\x3a\x8c\x3b\x1e\x31\xda\xd5\x34\x64\x9b\x46\x47\x5a\x34\xf2\xf5\xdc\xd6\x82\x44\x2a\xbf\xad\x9f\xe6\xae\x0e\x81\x11\xd4\x07\x49\x30\xb9\x2f\x68\x9a\xfd\xe0\xdc\xe7\x1d\x10\xe7\x87\x03\xab\x7a\xbe\x77\xc5\xc0\xa8\xcd\xbe\x1b\x58\x0f\x0a\x76\x75\xd0\xc2\x3b\x35\xea\x59\x95\x27\xfd\x63\xab\x56\xcd\xce\x17\x2a\xd7\x58\x7f\xa7\xd5\x60\xb1\x84\xc3\x12\xee\xba\xe1\x77\x21\x2f\xc6\x37\xf9\xf3\xeb\x77\x32\xbe\x54\x4e\x3a\x0f\x25\xfc\x77\x5d\x27\xd4\xfa\xee\x69\x5c\xc6\xb9\x45\xd9\xa9\x9e\xee\xf4\xe5\x6c\x30\x4d\x95\x77\x05\x28\x78\xf0\x77\x2d\x40\xcd\x66\x21\x8d\xae\xf7\x8a\x70\x33\xa1\xac\x55\xdf\xb4\xd7\x8d\xa2\x7c\xf2\x3c\x21\xff\xf0\x84\xa8\x7e\x4b\x39\xc6\x35\xcf\xf0\xcd\x06\x67\x0c\x1e\x6f\x37\x43\x47\xba\xcd\x6d\x18\xef\xb6\x67\xbb\xb5\xe4\x47\x5c\x16\xd1\xed\xad\x4f\x7f\x45\x1b\x6d\xb7\x58\x29\xa1\xab\x95\x30\x36\x95\x59\xd1\x67\xf0\x9e\xfd\x78\x0d\x33\x9a\x1f\xcf\xb6\x98\x92\x7d\x4b\x8c\x00\x48\x91\xc6\x13\x86\x1b\x77\x0a\x3d\xb9\x17\x4e\x1b\xc1\xc9\xf6\x2b\x17\x76\x41\xbf\x64\x8c\x69\x4b\x16\xc5\x11\xff\x1b\xd0\x77\x60\x11\xc7\xc7\x2c\xcd\x8a\x28\xfe\x1b\x00\x00\xff\xff\xee\x07\x3a\xfe\x68\x08\x00\x00")

func wwwJavascriptMapzenWhosonfirstRenderJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstRenderJs,
		"www/javascript/mapzen.whosonfirst.render.js",
	)
}

func wwwJavascriptMapzenWhosonfirstRenderJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstRenderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.render.js", size: 2152, mode: os.FileMode(420), modTime: time.Unix(1506645651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCssMapzenWhosonfirstCatalogCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xdd\x8e\x9b\x30\x10\x85\xef\x79\x8a\xa9\xa2\xbd\x24\x62\xd3\x46\xaa\xcc\xd3\x38\xf6\x00\x56\xfc\x43\xc7\x43\x36\xdb\x2a\xef\x5e\x81\x21\x05\xc2\x6e\x7a\xb1\xca\x55\x66\x6c\x7f\x67\xe6\x1c\x76\x4a\xfa\x8b\x8c\xf0\x27\x03\x00\x70\x92\x6a\xe3\x05\xbc\xa2\x2b\xb3\x5b\x96\xed\x9c\x6c\xc7\x56\x83\xa6\x6e\x58\xc0\xf7\xa2\x68\xaf\xa9\xf9\xab\x43\x7a\x1f\xdb\xa7\x40\x1a\x49\xc0\xa1\xbd\x42\x0c\xd6\x68\xd8\x15\x45\x51\xce\xaf\x1e\x87\x8b\x09\x73\xcd\x37\x8a\x3d\x3b\x3f\x05\xe6\xe0\xc4\x5d\x41\x82\x54\x81\xdc\x48\x6a\xa5\xd6\xc6\xd7\x02\xf6\xc7\xfe\xcc\xac\x94\x5b\xac\x78\x26\x5e\x23\x4b\x63\xe3\x7f\x28\x0c\x17\xa4\xca\x86\x37\x01\x51\x51\xb0\x16\xbe\x19\xd7\x06\x62\xe9\x79\x31\xc2\x38\xfc\x6a\x86\x45\x75\x73\x08\xc2\xd8\x59\xfe\x4a\x25\xb0\x2d\x05\x9e\x6b\x89\xa1\x23\x85\x77\xc3\x57\x57\x3f\xe7\x3d\x74\x3f\x95\x7b\xcb\x32\x96\x27\x3b\xb1\xac\xf1\x38\xc1\x0e\x93\x75\x55\xf0\x9c\x57\xd2\x19\xfb\x2e\x20\x4a\x1f\xf3\x88\x64\xaa\xd4\x7c\x33\x9a\x1b\xf1\x5a\x14\x2f\xe5\x6c\x71\x79\x6c\xa5\x1a\x12\xd0\xf9\x88\x23\x87\x46\xc8\x05\x89\x8d\x92\x36\x97\xd6\xd4\x5e\x00\x87\xb6\x5c\xc6\x66\xb5\x9f\x54\xe8\xff\x0f\xef\x34\x93\x47\x52\x9d\x6b\x0a\x9d\xd7\xb9\x0a\x36\x90\xd8\xa1\xee\x7f\xe5\xc2\xc1\xe4\x1e\x37\xc6\xa7\x3a\xe3\x95\x47\x72\x9f\xc5\x47\xce\x86\x31\xfb\xc3\x2a\xc6\x02\xf6\x87\x23\xba\x41\x8e\x1e\xe5\x6c\x3e\xbc\x3c\xff\x01\x6c\x94\xfa\x4f\xe9\xda\xa2\xfb\x67\x92\xbc\x62\x82\x3b\x35\xed\xff\xc7\xcf\x97\xa7\xbe\x0f\x2f\xb5\x34\x59\x3d\xb8\x1a\xcd\x6f\x14\xd1\xc9\xbe\x3b\x4f\xd2\x71\x33\x49\xf3\x24\x3e\x9e\xb8\x65\xd9\x5e\x59\xa3\xce\xb9\x9b\x18\xc9\x16\x38\xd9\x0e\x67\xcb\xd7\xa8\x02\x49\x36\xc1\x8b\xce\x6b\xa4\x3e\x74\xe9\x3a\x12\x05\xfa\xc8\x5d\x68\x8d\x3f\x2f\x89\x7f\x03\x00\x00\xff\xff\x08\x5c\xb8\xab\x1a\x05\x00\x00")

func wwwCssMapzenWhosonfirstCatalogCssBytes() ([]byte, error) {
	return bindataRead(
		_wwwCssMapzenWhosonfirstCatalogCss,
		"www/css/mapzen.whosonfirst.catalog.css",
	)
}

func wwwCssMapzenWhosonfirstCatalogCss() (*asset, error) {
	bytes, err := wwwCssMapzenWhosonfirstCatalogCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/css/mapzen.whosonfirst.catalog.css", size: 1306, mode: os.FileMode(420), modTime: time.Unix(1506706910, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCssMapzenWhosonfirstRenderCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xdf\x6a\xf3\x30\x0c\xc5\xef\xf3\x14\xfa\xf8\xd8\xa5\x4b\x57\xd8\x8d\xf7\x34\x4e\xac\x24\x62\xfe\x87\xac\x6c\x2d\xa3\xef\x3e\x12\xbb\xa1\x66\x2d\x8c\x5c\xe9\x28\x3a\xd2\xef\x78\x71\xf0\xdd\x01\x00\x38\xca\xa2\xb2\x5c\x1c\x2a\xb9\x24\xd4\x10\x62\xc0\xf7\xad\xe5\x0d\x4f\x14\xf4\x31\x9d\x4b\x9d\x8c\xb5\x14\xa6\x22\x5c\xbb\xee\x60\x17\x9f\x90\x41\x4c\xef\x70\xb7\x0b\xa8\x66\xa4\x69\x16\x7d\x42\x5f\x06\xc7\x18\x44\x8d\xc6\x93\xbb\x68\xc8\x26\x64\x95\x91\x69\x2c\xcd\x2f\xb2\x32\xeb\xd7\xe3\xf1\xa5\xd4\x7d\x64\x8b\xac\x72\x32\xc3\xba\x0c\x96\x90\x51\x1e\xec\x13\xae\x2b\x3f\x91\x85\x06\xe3\x94\x71\x34\x05\x0d\x12\x53\x7b\x2f\xec\x04\x95\x68\x13\xd6\xba\x71\x9d\xab\x5f\x6f\x86\x8f\x89\xe3\x12\xac\x1a\xa2\x8b\xac\xff\xa3\x5d\xbf\xe6\x3c\x89\xe9\x3e\xaa\xaa\xf6\x51\x24\xfa\xda\xd8\x16\xdc\x35\x1d\x8e\xa2\x21\x47\x47\x16\x64\xa6\x00\xff\xc8\xa7\xc8\x62\x82\x34\x26\xbc\x85\xf7\xe4\xc7\xdd\x54\xf0\x2c\x95\x78\x35\xfe\xcd\xd7\x46\x70\x38\xbd\xa1\x6f\x71\xf5\x48\x9c\x45\x0d\x33\x39\x7b\x43\xbf\x83\x7b\x72\x68\x6b\xe1\xcc\x63\x87\x5b\x10\x7f\x30\x29\x8f\x79\x9b\x7f\x88\xd5\x52\x34\x5a\x4d\xf5\xb0\xeb\x4d\x04\xd7\xee\x27\x00\x00\xff\xff\xcd\x95\x93\x60\xe8\x02\x00\x00")

func wwwCssMapzenWhosonfirstRenderCssBytes() ([]byte, error) {
	return bindataRead(
		_wwwCssMapzenWhosonfirstRenderCss,
		"www/css/mapzen.whosonfirst.render.css",
	)
}

func wwwCssMapzenWhosonfirstRenderCss() (*asset, error) {
	bytes, err := wwwCssMapzenWhosonfirstRenderCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/css/mapzen.whosonfirst.render.css", size: 744, mode: os.FileMode(420), modTime: time.Unix(1506645651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"www/index.html": wwwIndexHtml,
	"www/javascript/mapzen.whosonfirst.catalog.init.js": wwwJavascriptMapzenWhosonfirstCatalogInitJs,
	"www/javascript/mapzen.whosonfirst.catalog.js": wwwJavascriptMapzenWhosonfirstCatalogJs,
	"www/javascript/mapzen.whosonfirst.render.js": wwwJavascriptMapzenWhosonfirstRenderJs,
	"www/css/mapzen.whosonfirst.catalog.css": wwwCssMapzenWhosonfirstCatalogCss,
	"www/css/mapzen.whosonfirst.render.css": wwwCssMapzenWhosonfirstRenderCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"www": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.catalog.css": &bintree{wwwCssMapzenWhosonfirstCatalogCss, map[string]*bintree{}},
			"mapzen.whosonfirst.render.css": &bintree{wwwCssMapzenWhosonfirstRenderCss, map[string]*bintree{}},
		}},
		"index.html": &bintree{wwwIndexHtml, map[string]*bintree{}},
		"javascript": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.catalog.init.js": &bintree{wwwJavascriptMapzenWhosonfirstCatalogInitJs, map[string]*bintree{}},
			"mapzen.whosonfirst.catalog.js": &bintree{wwwJavascriptMapzenWhosonfirstCatalogJs, map[string]*bintree{}},
			"mapzen.whosonfirst.render.js": &bintree{wwwJavascriptMapzenWhosonfirstRenderJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
