// Code generated by go-bindata.
// sources:
// www/index.html
// www/javascript/mapzen.whosonfirst.catalog.init.js
// www/javascript/mapzen.whosonfirst.catalog.js
// www/javascript/mapzen.whosonfirst.render.js
// www/css/mapzen.whosonfirst.catalog.css
// www/css/mapzen.whosonfirst.render.css
// DO NOT EDIT!

package http

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wwwIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x41\xaf\x9b\x30\x0c\x80\xcf\xed\xaf\xf0\x7c\xd9\x89\xe6\x0f\x04\x2e\xdb\x2a\x4d\x9a\xd4\xc3\x0e\x3d\x4e\x29\x31\x23\x6d\x48\x50\x62\xe8\xeb\xfb\xf5\x4f\x10\x68\xe9\x53\x4f\xaf\xe5\x82\x6d\xcc\xc7\x87\xe5\xc8\x9a\x1b\x5b\xac\x01\x64\x4d\x4a\x0f\x01\x80\x64\xc3\x96\x8a\x7d\xed\xbf\x47\xd8\x39\xd8\x9a\x10\x19\x7e\x28\x56\xd6\xff\x87\xbf\x2d\xd9\xce\x9d\x28\x48\x91\xfa\xd2\x3b\xd6\xb8\x13\xf0\xa5\xa5\x1c\x99\xde\x58\x94\x31\x22\x04\xb2\x39\x46\xbe\x58\x8a\x35\x11\x23\xd4\x81\xaa\x1c\xcb\x18\x45\xa3\xda\x77\x72\x9b\x63\xdc\x8c\x9d\xe2\x39\xcc\xb9\xf6\xd1\xbb\x6a\x10\xdd\x94\x49\xf4\x9e\xfb\x2d\xcb\x5e\x02\x0f\xe4\x34\x85\x99\x0d\x59\x36\xf1\x63\x19\x4c\xcb\x4b\xf8\x51\xf5\x2a\x55\x11\x62\x28\x73\xbc\x15\x66\x70\x63\x86\x01\x60\x21\x45\xaa\x2f\x5d\xbf\x04\x7c\x60\x7a\xc7\x7f\xd2\xf7\xd1\x94\x1f\xf8\xbf\x8c\x6d\x9c\xe1\x4f\x3f\x30\x5d\xc3\xc2\x8a\x79\x63\xe5\xc1\xeb\xcb\xf4\x6d\x6d\x7a\x30\x3a\xc7\x52\xb9\x5e\x45\x4c\x55\x00\x59\xf9\xd0\x14\xeb\x95\x34\xae\xed\x96\x6a\x38\x76\x9f\x7d\xf5\xcf\x68\x04\xa7\x1a\xba\x65\xbd\xb2\x1d\xe5\x88\xd0\x5a\x55\x52\xed\xad\xa6\x90\xe3\x2f\xc7\x14\x40\xc1\x7e\xb7\x85\xdf\x3f\xc7\x0d\x5b\xc9\x43\xc7\xec\xdd\xc4\x8d\xdd\xa1\x31\x13\xd9\x7a\x7f\xea\x5a\x2c\xfe\x8c\x77\x29\x52\xe3\x55\x4b\x24\xaf\x29\x9b\xe5\x35\xb1\x32\x76\x61\x3f\x3f\x08\x14\x3b\xcb\xe3\x40\xb4\xe9\x6f\x94\x6b\x72\x0d\xa5\x48\x43\x91\x22\x1d\xf0\x8f\x00\x00\x00\xff\xff\x1c\xcc\x44\xf7\xe8\x03\x00\x00")

func wwwIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwIndexHtml,
		"www/index.html",
	)
}

func wwwIndexHtml() (*asset, error) {
	bytes, err := wwwIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/index.html", size: 1000, mode: os.FileMode(420), modTime: time.Unix(1506394563, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstCatalogInitJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xc1\x6a\xc3\x30\x10\x44\xcf\xeb\xaf\x58\x7c\x92\x21\xe8\x07\x4c\x0e\x6d\x09\x34\xd0\x63\xa1\xc7\xa2\x4a\xeb\x44\x44\x59\x19\x69\x15\x93\x86\xfc\x7b\x91\x6d\x9a\x5b\x4e\xd2\xa2\x99\xc7\x8c\x76\xf2\xec\xe2\xa4\x8d\x73\xbb\x0b\xb1\x7c\xf8\x2c\xc4\x94\x54\x1b\xa2\x71\xed\x06\x87\xc2\x56\x7c\x64\xac\xb3\xa2\xaa\xe9\x6e\x0d\x34\x70\x31\x09\x7f\x8a\x48\x64\xdc\xa2\x8b\xb6\x9c\x89\x45\x1f\x48\x76\x81\xea\xf5\xf5\xba\x77\x95\x12\x4f\x65\x6c\xbb\xbe\x5a\x16\xb9\x8e\x6c\x83\xb7\x27\xdc\xfe\xc3\x55\x77\x6b\x1a\x00\x49\x57\xbc\x35\x88\x88\x00\x33\xdf\xbb\x67\xec\x29\x0e\xdf\xde\xcd\x6c\x80\x59\x3a\x9a\x94\x69\xcf\xa2\xbc\xd3\x17\x13\x0a\x75\x7d\xe5\xc2\xd9\x8c\xbf\xc4\x7a\x3a\xc6\x1c\x79\xf0\x29\x8b\xb6\x46\x4c\x88\x07\xbd\x04\x54\xde\x3d\xaa\xaa\x94\xc7\x25\xd0\x92\x22\xe1\x16\x9f\x10\x12\xb1\xa3\x34\x9b\xe6\x24\xf0\x30\x52\x2e\x41\xf2\xb3\x0e\xab\x64\x2d\x01\xeb\xa8\xcd\x38\x12\xbb\xb7\xa3\x0f\x4e\xa5\xe5\xed\x3e\x1f\xf7\x1a\xcb\x1a\xb1\x47\x54\x54\x17\x01\x60\x23\xe7\x18\x48\x87\x78\x50\xed\xd7\xfb\xcb\x67\xbb\x41\x5a\xc5\x00\xeb\x77\x26\x92\x92\x18\x07\x13\x32\xf5\x0d\xdc\xfb\xa6\xf2\xfe\x02\x00\x00\xff\xff\xae\xcc\x05\x3a\xfd\x01\x00\x00")

func wwwJavascriptMapzenWhosonfirstCatalogInitJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstCatalogInitJs,
		"www/javascript/mapzen.whosonfirst.catalog.init.js",
	)
}

func wwwJavascriptMapzenWhosonfirstCatalogInitJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstCatalogInitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.catalog.init.js", size: 509, mode: os.FileMode(420), modTime: time.Unix(1506039287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstCatalogJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\x51\x6f\xdb\x38\x12\x7e\xb6\x7f\x05\xab\x17\x4b\x88\xa3\xb4\xbd\x7b\xaa\xcf\x0f\x77\x87\xdc\xf5\x6e\xd3\xee\xa2\x0d\x16\xbb\x30\x8c\x80\x16\xc7\x16\x51\x99\x54\x49\xaa\xae\x37\xc9\x7f\x5f\x0c\x29\x91\x94\xad\x3a\xf6\xfa\xa1\x8d\xc8\xef\x9b\x19\x0e\x67\x86\x1c\x7e\xa3\x8a\x6c\x69\xfd\x07\x08\x32\xef\xfe\x78\x7a\x22\x8f\xcf\xb3\xb1\xfb\xca\x77\xa5\xd4\x52\xac\xb9\xd2\xc6\x43\x7a\x83\x2d\x7c\x00\x9f\x17\xd4\xd0\x4a\x6e\xc8\x9c\xa4\xeb\x46\x14\x86\x4b\x91\x66\x8f\xe3\x31\x21\x84\xa0\xe6\x82\x16\x25\x90\xb9\xe3\x77\x83\x1a\xaa\x35\x8e\x8d\x47\xe3\xd1\xa4\x92\xf2\x4b\x53\x4f\xde\x11\xcf\xe7\x6c\x4a\x8a\x55\xf6\x38\x1e\x21\xc1\xfd\x8b\xb4\x5a\x49\x23\xc9\x9c\x30\x59\x34\x5b\x10\x26\xaf\x64\x41\x91\x91\xdb\x99\x42\x56\xb3\x00\x6e\x54\x45\xe6\x2d\xe5\x8a\x4c\x6e\x6e\x26\xe4\x8a\x78\x42\x29\xb5\x89\xbf\x6b\x6a\x4a\x41\xb7\x80\x50\xce\x2c\x96\xb3\xd9\xa1\x01\x52\x54\x92\x32\x32\x0f\xa6\x2a\x5d\xa3\x9d\xa3\xf1\x68\x84\x00\x43\xd5\x06\xd0\x89\x4a\xd7\xb9\xfb\x98\xb9\x59\xbe\x26\xa9\x1b\xc8\x15\x50\xb6\xff\x6c\xa8\x01\xf2\x6a\x4e\xfe\x6e\xf9\xa8\x41\x81\x69\x94\x40\xfc\x73\x90\xa8\x0d\x35\x8d\x7e\x28\x24\x43\x2f\x3a\x09\x8b\x89\x1b\x9d\x2c\x11\xdc\xc3\x19\xf8\x6e\x8e\x70\xf7\xf0\xdd\x38\x6c\x2b\x54\xd1\x5d\x04\x52\xa0\x6b\x29\x34\x04\x18\x62\x18\x35\x94\xcc\x89\x68\xaa\xaa\x65\x1a\xb5\x27\x9d\xad\xed\xec\xff\x3f\xff\xfc\x31\xaf\xa9\xd2\x90\x2a\xba\xcb\x22\xdb\x0b\x6a\x8a\x92\xa4\xe0\x57\x57\x48\xa1\x65\x05\x79\x25\x37\x69\x72\xfb\xe9\x53\x32\xc5\x2d\x9a\x12\xc8\x7a\xcb\x27\x6b\x5a\x69\x88\x05\xad\x52\x54\x96\xb5\x9b\xf1\x7c\xb4\x29\x0a\xbe\xa2\x9d\xb0\x23\xbf\x7d\xb8\x7b\x6f\x4c\xfd\x09\xbe\x36\xa0\x4d\xda\x51\x14\x7c\xcd\x29\x63\xb7\xdf\x40\x98\x3b\xae\x0d\x08\x50\x69\x82\x3b\x99\x4c\xdb\x2d\xcd\x7a\x52\x91\x20\x6b\x10\x69\xf2\xdf\xdb\xfb\xce\x4e\xa3\x1a\x88\x25\x6a\x10\xcc\xaa\x78\x9e\xda\x30\x56\x20\x18\xa8\x38\x8c\xdb\xd8\x38\xb4\xb6\x90\x8a\x69\x17\x22\x8b\xa4\xfd\x04\x93\x2c\xfd\x47\xb2\x8c\xc2\xb8\x90\x8d\xb0\x01\xe5\xe6\xf2\x0a\xc4\xc6\x94\x47\x4e\x58\xed\x1f\xcc\xbe\xee\x12\xcd\x0f\xe3\x18\xea\x5a\xc4\x22\xb5\x6c\x54\xd1\x1f\x76\xff\xae\xa5\x22\x29\x22\xf8\xfc\xf5\x8c\x70\xf2\x0f\xa7\x7d\x46\xf8\xd5\x55\x1c\xe5\x2a\xd8\xb3\xe0\x3e\x60\xac\x95\x8b\x04\x55\x26\xcb\x28\xea\x5f\x75\xc6\x2d\xcc\xd2\x47\x43\xfb\x5f\x98\x41\x6b\x88\x22\x96\x88\x33\xd6\xf2\xbc\x6e\x74\x99\x9a\x38\xae\xa0\xd2\xe0\xa3\x30\xd0\x1d\x52\x75\x48\x1b\x29\xf1\xd2\x9c\x38\x2d\x55\x08\x8b\x5e\x40\xde\xff\xfe\xcb\xed\xe7\x64\xea\x70\xd9\x91\x7b\x0d\x5d\x55\x10\x57\x9e\x42\x01\x35\x70\x5b\x01\x7e\xa5\x89\x9d\x4f\x8e\x79\xce\xd5\x0f\x25\x50\x06\xea\x14\xbf\xf4\xe4\x1e\x25\xa7\x75\x0d\x82\xfd\xbb\xe4\x15\x4b\x0f\xc8\x98\xae\x1f\x25\x83\x34\x71\x94\x24\x1b\xb0\x7b\x5f\x5f\xa6\x3d\x22\x9c\xa7\xdb\x6e\xf7\x80\xe6\x92\xea\xf2\x22\xcd\x11\xe1\x3c\xcd\x48\x18\xd2\xdc\x28\x7e\x91\xe2\x80\x3f\x4f\x6f\xa3\xf8\xa0\xab\xf9\x96\x8b\xcd\x65\xce\x8e\x29\x67\xba\xdb\x52\x86\xf4\xeb\x52\xee\x2e\x0b\xb4\x40\x38\x4f\xf7\xf5\xe0\x3e\x5b\x01\x0f\x4a\xee\x4e\x69\x55\x61\x9b\x3d\xbe\xa7\xb4\x17\xf5\x2f\x60\xa3\x18\x7d\x01\x19\xc5\xd4\x0b\xc8\x10\x04\x2f\x29\x8f\xf7\xec\xa5\x45\x05\x0f\x67\xb3\x51\xfb\xeb\x55\x25\x2c\x1b\x7d\x8b\xbd\xa4\x6c\xb8\x34\x1b\xc2\x45\x5b\xa5\xda\x8a\x6c\xcf\x7b\x1c\x58\x98\x50\x8b\xd1\x45\xe1\xa8\x09\x75\x32\xba\x04\xd8\xda\x1e\x81\x62\x4e\x38\x66\x3a\xf4\x6a\xff\xe0\xf6\xa8\x3b\x62\x46\x03\x47\x09\x82\x7f\x70\x88\x74\x92\xc3\x61\x12\x1d\x03\xd1\x7d\x23\xb6\xa2\x3d\x5c\x0e\x80\xde\x0c\x64\x2c\xba\xe2\xb7\x9c\x39\xe7\xf6\x4a\x9f\x07\xb5\x87\xd2\x01\xa4\x51\xdc\x23\x30\xab\xbd\xb6\x90\xcf\x41\x82\x4b\xbc\x25\xb9\x21\x6f\x5e\x77\xbf\xd9\xe8\xe6\x86\x08\x2a\xa4\x86\x42\x0a\xa6\x8f\x8d\xc5\x08\xf4\x32\x6c\xc5\xb2\x56\xfc\x68\x55\x0f\x05\x54\xd5\xa9\x44\x62\x36\x91\xe2\x83\x02\x19\x67\xe5\xaf\xc3\x67\xd9\x80\x4b\xad\xd3\x2f\x50\xed\xf1\x67\x29\x46\xf4\xa0\x5a\x9b\x9e\x17\xa8\xf5\xf8\xb3\xd4\x22\x7a\x50\x2d\xe6\xfa\x05\x5a\x3b\xf8\x59\x4a\x1b\xc5\x87\x3d\xec\xca\xc6\x25\x3e\x0e\x8c\xf3\xbc\x6c\xf1\xb9\x91\xff\xe1\xdf\x81\xa5\x7f\xcb\xc8\x15\x49\x74\x32\x68\x8d\x2d\x4c\x17\xd8\x72\x48\x5d\x35\xc6\x48\x71\x82\xec\x00\x51\xac\x06\x56\xae\xc1\xfc\xd3\x18\xc5\x57\x8d\x81\x34\xc1\xcc\xb8\xc6\xe4\xc3\x6b\x36\xcf\xe2\x14\x8d\x49\xe7\xdd\x83\x4a\xb9\x3b\x5e\xb0\x5f\xec\x71\x6d\x76\xc2\x87\x96\xb9\x05\x43\xcf\x3b\xd4\x2c\xa5\x83\x0f\x9d\x69\xa8\xfa\x34\xd0\xa7\xd3\x69\x98\x0f\xff\xd3\xb0\x2e\x5e\x5f\xd0\x19\xc2\xeb\x85\x55\x74\xee\x8b\x8f\xb0\x23\xff\xb6\xdb\x24\x45\x51\xf1\xe2\x4b\xdc\x21\xbb\x0e\x10\x39\xf6\xc4\x00\x8c\x39\x88\x7a\xe3\x51\xa8\xc4\x50\xe5\x9b\xe1\xe0\xc8\xda\xc3\xc5\x36\x14\xe9\x2b\xc2\xc0\x50\x5e\xe9\x5c\x9b\x7d\x05\x39\xe3\xba\xae\xe8\x3e\x23\x4f\x4f\x24\x1d\x9c\x22\xf3\x39\x49\x84\x14\x78\x55\xb5\xe6\x58\xc3\xa1\x5a\xe7\xd6\xfa\x96\x63\xb3\x77\xd6\x4d\x43\x95\x73\x21\x40\xdd\xbb\x96\x3a\x29\x39\x83\x64\xe6\x3d\x60\x1b\x12\xfb\x87\x6f\x49\x82\x54\xc4\x7a\xa9\x3f\x16\x69\x03\xf6\x40\x64\xd7\xe4\xc6\x2e\x8e\xef\x09\x69\xb7\x4b\xd9\x6c\xdc\xb5\xd6\xb4\x28\x61\xd1\x28\xbe\x6c\x8f\x9a\x99\xa3\x0e\x35\x42\x6d\x97\x6d\x25\xba\xe6\x75\x3c\x9a\xc4\xe6\xc6\x1d\x6c\xf6\x38\x0e\x37\xbd\x76\x3e\xce\x88\x0d\x98\x36\x1d\xfe\xb5\xff\x1f\x4b\x93\x16\xe2\x2f\x7b\xdd\x5e\xd8\x45\xbf\xbf\xff\x70\x87\x8b\x4e\x42\xcf\x1c\x3b\x3f\xd6\x8b\xfb\xd0\xa9\x1e\xf4\xe7\xf8\xf0\xda\x10\x5c\x10\x35\xba\x2b\xc9\xf6\xfe\xf0\xc5\x0f\x3c\xe1\xe3\xe7\x24\x30\x66\xdf\xbd\x62\x68\xa3\xb8\xd8\xf0\xf5\x3e\x45\xe4\xd4\x3e\x7c\x4c\xc9\xdb\xe3\x1b\x2f\x6b\xb6\xf5\x89\xb2\x50\xab\xd0\x08\x22\xf4\xac\xd2\xe5\x4c\xc9\x7a\x2b\xdb\xd2\x53\x6a\x18\xff\xe6\xd5\x6c\x69\x7d\x50\x55\x39\x4b\xa6\x24\xd9\xd2\x3a\xe9\x89\xbc\xac\x8d\xb5\x8c\x93\xcd\x84\xea\x8b\xaf\x60\x6d\xce\x3c\x56\xfc\x73\x08\xdf\x94\x67\x72\x1c\xc9\xeb\xf0\xe9\x40\x6b\xff\x2c\xe3\x85\x75\x93\xb8\x01\x9e\x6a\xfa\x7d\x8e\x97\xe4\xdb\xb1\xfe\x7c\x90\x16\x24\x1c\xdd\xd7\x8d\xea\x47\xe3\x5f\xcf\x91\x9e\x54\xd4\xe3\x05\xdb\x0c\x60\x8a\xee\x1e\xb6\xb4\xf6\x8f\x61\x2e\x73\xbb\xe1\x38\x7b\x2c\x22\xce\xdc\x35\x50\xd3\x28\x38\x4a\x85\x28\x13\x64\x8d\x46\xb7\xc0\x45\x82\x03\xa0\x0c\x07\xdd\x4f\x99\x8a\x1a\xf7\xa8\x5a\xeb\x45\xb2\x01\xb9\x7d\x57\x51\xc3\x4d\xc3\xa0\x27\xaf\xb2\x97\x83\x1e\x4c\x8a\x8d\xc7\xd9\x77\xe0\xee\x77\x97\x7f\x70\xaf\xca\xb4\xe6\x3f\xc1\x3e\x76\x1d\xda\x39\x74\x22\xb8\x67\xe8\x6b\x5a\xf3\xeb\x2f\xb0\x0f\xcf\x2e\xb1\x58\x97\x3d\x5e\x38\x7a\x6e\x82\x7e\xca\x66\x87\x30\x4c\x9d\x5f\x39\xec\xd2\x45\x45\xcd\x14\x6d\x5f\x4e\xc9\x9b\xb7\xfd\xc8\xa6\x7b\xdb\x56\xdf\xe5\x1b\x90\x58\x2e\xd2\xd6\x55\x9d\x6e\x0b\xc8\x29\x63\xf7\xb2\x8b\xc8\xe7\x71\x5b\xca\xbd\x6d\x6d\xed\xc5\xfd\x6c\x47\x9f\xb3\x34\x9b\x8d\xc6\x7f\x06\x00\x00\xff\xff\xe7\xb4\x23\x0c\xa3\x17\x00\x00")

func wwwJavascriptMapzenWhosonfirstCatalogJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstCatalogJs,
		"www/javascript/mapzen.whosonfirst.catalog.js",
	)
}

func wwwJavascriptMapzenWhosonfirstCatalogJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstCatalogJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.catalog.js", size: 6051, mode: os.FileMode(420), modTime: time.Unix(1506394579, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstRenderJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x41\x6e\xdb\x3a\x10\x5d\x4b\xa7\x18\xe8\x2f\x22\xc1\xfe\x4a\xfe\x36\x8a\xf0\x11\x14\xdd\x76\xd5\x5d\x11\x04\xb4\x38\xae\x59\xd3\x92\x41\x8e\x63\xa7\x89\x81\xde\xa1\x37\xec\x49\x8a\x21\x29\x59\xb2\x65\x65\x91\x44\x12\xdf\x7b\x33\x9c\x79\x33\xc8\x8b\x30\xb0\x11\xdb\x9f\x58\x43\xd9\x3e\xbc\xbf\xc3\xdb\xb1\x88\xfd\x5b\xbe\x5f\x35\xb6\xa9\x97\xca\x58\xea\x20\x83\x8f\x01\x3e\x82\xcf\x0d\xd6\x12\x0d\x94\x90\x2e\x77\x75\x45\xaa\xa9\xd3\xec\x2d\x8e\x23\x8e\x6a\x51\x2f\xa1\x04\x7e\x8d\x6e\x3c\xf0\x59\x0a\x12\x37\xf7\xd0\x81\xe5\x1c\x2a\x3a\x38\x4a\xe4\x48\x7b\x23\xb6\x5b\xa7\x28\x9b\x6a\xb7\xc1\x9a\xf2\xca\xa0\x20\xfc\xac\x91\xdf\xd2\x44\xaa\x97\x24\x2b\x18\x1f\xb0\xb9\x45\x7a\x24\x32\x6a\xb1\x23\x4c\x93\x4a\x0b\x6b\x93\x39\x24\x72\xb7\xd9\xa2\x61\x6c\x2b\xee\x93\x70\x5c\xfe\x51\x4b\x48\x1f\x8d\x11\xaf\xb9\xb2\xee\x6f\x2a\xb3\xec\x8d\x4f\xa2\xee\x5e\x7c\x89\x70\xcb\x67\xad\x2c\xb5\x19\x3b\x91\x63\x1c\x01\x00\xf0\x23\x6a\x8b\xc0\x82\xf4\xba\xc5\x66\x99\xca\x0c\xca\x12\x92\x66\xf1\x03\x2b\x4a\xa6\x54\xa5\xaa\xce\x55\x3b\x41\x4f\xe3\xd4\xab\xa6\x26\xac\xe9\x8c\x4b\x78\xe8\x71\x87\x31\xae\xd5\xcf\x6e\x45\x9d\x64\x45\x14\x8a\x10\x08\x39\x97\xb2\x96\x9f\x56\x4a\xcb\x34\x04\xeb\xa7\xd3\xd6\xba\x0f\xf3\x4c\x8f\x32\x48\x3b\x53\xb7\xed\x2b\xbc\xf8\x71\x3e\xe8\xbd\xaa\x68\xb4\xf7\x5d\x11\xf9\xa2\x24\x16\x1a\x27\xd2\x77\xe7\xc1\x00\xee\xf9\x5a\xfb\xbd\x90\xfb\xfd\xaf\x44\x12\x4a\x5b\x47\x6b\x83\x2d\x1b\x03\xe9\x1a\x54\x0d\xd2\xb5\xa7\x2b\xb5\x69\xf6\x53\xf1\x4d\x08\xee\xb0\x5a\x2c\x50\xbb\x36\x40\x09\x6b\xff\xbd\x3b\x7c\xae\xe8\xc0\xa3\xc1\xb7\x84\xff\xf9\xb2\x30\x83\x24\x4f\x60\x06\x6b\xb8\xbf\x80\xaf\x50\x4c\x77\x8e\x56\x17\xa1\x2f\xd1\x5f\xf1\x40\x5f\x1a\x89\xe9\x29\xb5\x40\xf2\xfa\x83\x0e\x3a\x8c\x3b\x1e\x31\xda\xd5\x34\x64\x9b\x46\x47\x5a\x34\xf2\xf5\xdc\xd6\x82\x44\x2a\xbf\xad\x9f\xe6\xae\x0e\x81\x11\xd4\x07\x49\x30\xb9\x2f\x68\x9a\xfd\xe0\xdc\xe7\x1d\x10\xe7\x87\x03\xab\x7a\xbe\x77\xc5\xc0\xa8\xcd\xbe\x1b\x58\x0f\x0a\x76\x75\xd0\xc2\x3b\x35\xea\x59\x95\x27\xfd\x63\xab\x56\xcd\xce\x17\x2a\xd7\x58\x7f\xa7\xd5\x60\xb1\x84\xc3\x12\xee\xba\xe1\x77\x21\x2f\xc6\x37\xf9\xf3\xeb\x77\x32\xbe\x54\x4e\x3a\x0f\x25\xfc\x77\x5d\x27\xd4\xfa\xee\x69\x5c\xc6\xb9\x45\xd9\xa9\x9e\xee\xf4\xe5\x6c\x30\x4d\x95\x77\x05\x28\x78\xf0\x77\x2d\x40\xcd\x66\x21\x8d\xae\xf7\x8a\x70\x33\xa1\xac\x55\xdf\xb4\xd7\x8d\xa2\x7c\xf2\x3c\x21\xff\xf0\x84\xa8\x7e\x4b\x39\xc6\x35\xcf\xf0\xcd\x06\x67\x0c\x1e\x6f\x37\x43\x47\xba\xcd\x6d\x18\xef\xb6\x67\xbb\xb5\xe4\x47\x5c\x16\xd1\xed\xad\x4f\x7f\x45\x1b\x6d\xb7\x58\x29\xa1\xab\x95\x30\x36\x95\x59\xd1\x67\xf0\x9e\xfd\x78\x0d\x33\x9a\x1f\xcf\xb6\x98\x92\x7d\x4b\x8c\x00\x48\x91\xc6\x13\x86\x1b\x77\x0a\x3d\xb9\x17\x4e\x1b\xc1\xc9\xf6\x2b\x17\x76\x41\xbf\x64\x8c\x69\x4b\x16\xc5\x11\xff\x1b\xd0\x77\x60\x11\xc7\xc7\x2c\xcd\x8a\x28\xfe\x1b\x00\x00\xff\xff\xee\x07\x3a\xfe\x68\x08\x00\x00")

func wwwJavascriptMapzenWhosonfirstRenderJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstRenderJs,
		"www/javascript/mapzen.whosonfirst.render.js",
	)
}

func wwwJavascriptMapzenWhosonfirstRenderJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstRenderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.render.js", size: 2152, mode: os.FileMode(420), modTime: time.Unix(1506219354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCssMapzenWhosonfirstCatalogCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x4b\xce\xdb\x30\x0c\x84\xf7\x3e\x05\x8b\x20\x4b\x05\x6e\xd0\x00\x85\x72\x1a\xda\xa2\x6d\xa2\x7a\x41\x62\x5e\x2d\x72\xf7\xc2\x96\xe2\x3f\x41\xfe\xc0\x2b\x91\xe2\x7c\x63\x8e\x36\x0e\x23\xfc\x6b\x00\x00\x26\xe2\x71\x12\x0d\x87\xb6\x8d\xd7\xe3\x52\xba\xb0\x91\x49\xc3\xcf\xb6\xdd\x1e\x9b\x7b\xd3\xec\x0c\x09\xb2\xcd\x75\xc2\x70\x8e\x16\x6f\xda\x07\x4f\x4b\x5f\xb0\xb3\x54\x9b\x96\x3d\xa9\xaa\xb9\x27\x57\x04\x87\xe0\x45\x0d\xe8\xd8\xde\x34\x64\xf4\x59\x65\x4a\x3c\x3c\xd3\x0a\x6c\x3e\x77\x21\x19\x4a\x2a\x47\xec\xd9\x8f\x1a\x4e\x3e\x93\x14\x4e\xaa\x90\x33\x25\xe1\x1e\xad\x42\xcb\xa3\xd7\x20\x21\x96\xd9\x88\xc6\x2c\x43\xeb\xbf\x38\x4c\x23\xfb\x52\x98\xcf\x8b\xce\x54\x75\x3a\xec\xff\x8c\x29\x9c\xbc\x51\x7d\xb0\x21\xe9\x0d\x99\xf9\x7b\x36\xa2\x21\x07\xcb\x06\x64\x62\x5f\xea\x42\x57\xa9\x64\x4b\x83\xbc\x73\x9e\x0a\xaa\x0b\x22\xc1\xe9\xdd\xba\x8b\xd5\xe2\x6e\x7f\x20\xb7\xd8\x31\xd5\xce\xb7\xc2\xaf\xf7\x3f\xc0\xaa\xd5\x2f\xa7\xf0\x83\x5d\x0c\x49\xd0\x97\xd5\x6d\x1e\x11\x96\xac\x24\xc1\x4a\x2d\xfb\xff\xf5\x7b\xfb\x32\x33\x77\xc2\x99\xd2\x60\xc3\x45\x43\xee\x53\xb0\x76\x51\x8a\xe9\x11\xf5\x92\x6a\xe6\xbf\xa4\xb3\xc3\xb9\xfb\xf6\x9c\xde\x14\x1d\x5e\xd5\xe7\x1b\xf7\xa6\xf9\x1f\x00\x00\xff\xff\xaf\xc9\x0d\x81\x99\x02\x00\x00")

func wwwCssMapzenWhosonfirstCatalogCssBytes() ([]byte, error) {
	return bindataRead(
		_wwwCssMapzenWhosonfirstCatalogCss,
		"www/css/mapzen.whosonfirst.catalog.css",
	)
}

func wwwCssMapzenWhosonfirstCatalogCss() (*asset, error) {
	bytes, err := wwwCssMapzenWhosonfirstCatalogCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/css/mapzen.whosonfirst.catalog.css", size: 665, mode: os.FileMode(420), modTime: time.Unix(1506394765, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCssMapzenWhosonfirstRenderCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xdf\x6a\xf3\x30\x0c\xc5\xef\xf3\x14\xfa\xf8\xd8\xa5\x4b\x57\xd8\x8d\xf7\x34\x4e\xac\x24\x62\xfe\x87\xac\x6c\x2d\xa3\xef\x3e\x12\xbb\xa1\x66\x2d\x8c\x5c\xe9\x28\x3a\xd2\xef\x78\x71\xf0\xdd\x01\x00\x38\xca\xa2\xb2\x5c\x1c\x2a\xb9\x24\xd4\x10\x62\xc0\xf7\xad\xe5\x0d\x4f\x14\xf4\x31\x9d\x4b\x9d\x8c\xb5\x14\xa6\x22\x5c\xbb\xee\x60\x17\x9f\x90\x41\x4c\xef\x70\xb7\x0b\xa8\x66\xa4\x69\x16\x7d\x42\x5f\x06\xc7\x18\x44\x8d\xc6\x93\xbb\x68\xc8\x26\x64\x95\x91\x69\x2c\xcd\x2f\xb2\x32\xeb\xd7\xe3\xf1\xa5\xd4\x7d\x64\x8b\xac\x72\x32\xc3\xba\x0c\x96\x90\x51\x1e\xec\x13\xae\x2b\x3f\x91\x85\x06\xe3\x94\x71\x34\x05\x0d\x12\x53\x7b\x2f\xec\x04\x95\x68\x13\xd6\xba\x71\x9d\xab\x5f\x6f\x86\x8f\x89\xe3\x12\xac\x1a\xa2\x8b\xac\xff\xa3\x5d\xbf\xe6\x3c\x89\xe9\x3e\xaa\xaa\xf6\x51\x24\xfa\xda\xd8\x16\xdc\x35\x1d\x8e\xa2\x21\x47\x47\x16\x64\xa6\x00\xff\xc8\xa7\xc8\x62\x82\x34\x26\xbc\x85\xf7\xe4\xc7\xdd\x54\xf0\x2c\x95\x78\x35\xfe\xcd\xd7\x46\x70\x38\xbd\xa1\x6f\x71\xf5\x48\x9c\x45\x0d\x33\x39\x7b\x43\xbf\x83\x7b\x72\x68\x6b\xe1\xcc\x63\x87\x5b\x10\x7f\x30\x29\x8f\x79\x9b\x7f\x88\xd5\x52\x34\x5a\x4d\xf5\xb0\xeb\x4d\x04\xd7\xee\x27\x00\x00\xff\xff\xcd\x95\x93\x60\xe8\x02\x00\x00")

func wwwCssMapzenWhosonfirstRenderCssBytes() ([]byte, error) {
	return bindataRead(
		_wwwCssMapzenWhosonfirstRenderCss,
		"www/css/mapzen.whosonfirst.render.css",
	)
}

func wwwCssMapzenWhosonfirstRenderCss() (*asset, error) {
	bytes, err := wwwCssMapzenWhosonfirstRenderCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/css/mapzen.whosonfirst.render.css", size: 744, mode: os.FileMode(420), modTime: time.Unix(1506219354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"www/index.html": wwwIndexHtml,
	"www/javascript/mapzen.whosonfirst.catalog.init.js": wwwJavascriptMapzenWhosonfirstCatalogInitJs,
	"www/javascript/mapzen.whosonfirst.catalog.js": wwwJavascriptMapzenWhosonfirstCatalogJs,
	"www/javascript/mapzen.whosonfirst.render.js": wwwJavascriptMapzenWhosonfirstRenderJs,
	"www/css/mapzen.whosonfirst.catalog.css": wwwCssMapzenWhosonfirstCatalogCss,
	"www/css/mapzen.whosonfirst.render.css": wwwCssMapzenWhosonfirstRenderCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"www": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.catalog.css": &bintree{wwwCssMapzenWhosonfirstCatalogCss, map[string]*bintree{}},
			"mapzen.whosonfirst.render.css": &bintree{wwwCssMapzenWhosonfirstRenderCss, map[string]*bintree{}},
		}},
		"index.html": &bintree{wwwIndexHtml, map[string]*bintree{}},
		"javascript": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.catalog.init.js": &bintree{wwwJavascriptMapzenWhosonfirstCatalogInitJs, map[string]*bintree{}},
			"mapzen.whosonfirst.catalog.js": &bintree{wwwJavascriptMapzenWhosonfirstCatalogJs, map[string]*bintree{}},
			"mapzen.whosonfirst.render.js": &bintree{wwwJavascriptMapzenWhosonfirstRenderJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
