// Code generated by go-bindata.
// sources:
// www/index.html
// www/javascript/mapzen.whosonfirst.catalog.init.js
// www/javascript/mapzen.whosonfirst.catalog.js
// www/javascript/mapzen.whosonfirst.render.js
// www/css/mapzen.whosonfirst.catalog.css
// www/css/mapzen.whosonfirst.render.css
// DO NOT EDIT!

package http

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wwwIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xc1\x8e\x9b\x30\x10\x86\xcf\xc9\x53\x4c\xe7\xd2\x13\xf1\x0b\x18\x2e\x6d\x23\x55\xaa\x94\x43\x0f\x39\x56\x0e\x1e\x8a\x13\x63\x23\x7b\x20\x4d\x9f\x7e\x05\x86\x84\xec\xe6\xb4\x09\x17\xec\xe1\xe7\xe3\xf3\x68\x90\x35\x37\xb6\x58\x03\xc8\x9a\x94\x1e\x16\x00\x92\x0d\x5b\x2a\xf6\xb5\xff\x1a\x61\xe7\x60\x6b\x42\x64\xf8\xa6\x58\x59\xff\x17\x7e\xb7\x64\x3b\x77\xa2\x20\x45\xca\xa5\x77\xac\x71\x27\xe0\x4b\x4b\x39\x32\xfd\x63\x51\xc6\x88\x10\xc8\xe6\x18\xf9\x62\x29\xd6\x44\x8c\x50\x07\xaa\x72\x2c\x63\x14\x8d\x6a\xff\x93\xdb\x1c\xe3\x66\x4c\x8a\xe7\x30\xe7\xda\x47\xef\xaa\x41\x74\x53\x26\xd1\x7b\xee\x97\x2c\x7b\x09\x3c\x90\xd3\x14\x66\x36\x64\xd9\xc4\x8f\x65\x30\x2d\x2f\xe1\x47\xd5\xab\x54\x45\x88\xa1\xcc\xf1\x56\x98\xc1\x8d\x19\x1a\x80\x85\x14\xa9\xbe\x74\xfd\x14\xf0\x81\xe9\x1d\xff\x49\xdf\x47\x5d\x7e\xe0\xff\x32\xb6\x71\x86\xdf\x1d\x60\xba\x86\x81\x15\xf3\xc4\xca\x83\xd7\x97\xe9\xdb\xda\xf4\x60\x74\x8e\xa5\x72\xbd\x8a\x98\xaa\x00\xb2\xf2\xa1\x29\xd6\x2b\x69\x5c\xdb\x2d\xd5\x70\x4c\x9f\x7d\xf5\xc7\x68\x04\xa7\x1a\xba\xed\x7a\x65\x3b\xca\x11\xa1\xb5\xaa\xa4\xda\x5b\x4d\x21\xc7\x1f\x8e\x29\x80\x82\xfd\x6e\x0b\x3f\xbf\x8f\x13\xb6\x92\x87\x8e\xd9\xbb\x89\x1b\xbb\x43\x63\x26\xb2\xf5\xfe\xd4\xb5\x58\xfc\x1a\xef\x52\xa4\xe0\x55\x4b\x24\xaf\x69\x37\xcb\x07\x8a\x9d\xe5\xf1\xdc\xda\xf4\x1f\x1e\x6b\x62\x65\xec\xe2\x70\xb7\xd4\x75\x29\x45\x6a\x8a\x14\xe9\x07\x7f\x0b\x00\x00\xff\xff\x47\x10\xa9\x21\xe8\x03\x00\x00")

func wwwIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwIndexHtml,
		"www/index.html",
	)
}

func wwwIndexHtml() (*asset, error) {
	bytes, err := wwwIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/index.html", size: 1000, mode: os.FileMode(420), modTime: time.Unix(1506392997, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstCatalogInitJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xc1\x6a\xc3\x30\x10\x44\xcf\xeb\xaf\x58\x7c\x92\x21\xe8\x07\x4c\x0e\x6d\x09\x34\xd0\x63\xa1\xc7\xa2\x4a\xeb\x44\x44\x59\x19\x69\x15\x93\x86\xfc\x7b\x91\x6d\x9a\x5b\x4e\xd2\xa2\x99\xc7\x8c\x76\xf2\xec\xe2\xa4\x8d\x73\xbb\x0b\xb1\x7c\xf8\x2c\xc4\x94\x54\x1b\xa2\x71\xed\x06\x87\xc2\x56\x7c\x64\xac\xb3\xa2\xaa\xe9\x6e\x0d\x34\x70\x31\x09\x7f\x8a\x48\x64\xdc\xa2\x8b\xb6\x9c\x89\x45\x1f\x48\x76\x81\xea\xf5\xf5\xba\x77\x95\x12\x4f\x65\x6c\xbb\xbe\x5a\x16\xb9\x8e\x6c\x83\xb7\x27\xdc\xfe\xc3\x55\x77\x6b\x1a\x00\x49\x57\xbc\x35\x88\x88\x00\x33\xdf\xbb\x67\xec\x29\x0e\xdf\xde\xcd\x6c\x80\x59\x3a\x9a\x94\x69\xcf\xa2\xbc\xd3\x17\x13\x0a\x75\x7d\xe5\xc2\xd9\x8c\xbf\xc4\x7a\x3a\xc6\x1c\x79\xf0\x29\x8b\xb6\x46\x4c\x88\x07\xbd\x04\x54\xde\x3d\xaa\xaa\x94\xc7\x25\xd0\x92\x22\xe1\x16\x9f\x10\x12\xb1\xa3\x34\x9b\xe6\x24\xf0\x30\x52\x2e\x41\xf2\xb3\x0e\xab\x64\x2d\x01\xeb\xa8\xcd\x38\x12\xbb\xb7\xa3\x0f\x4e\xa5\xe5\xed\x3e\x1f\xf7\x1a\xcb\x1a\xb1\x47\x54\x54\x17\x01\x60\x23\xe7\x18\x48\x87\x78\x50\xed\xd7\xfb\xcb\x67\xbb\x41\x5a\xc5\x00\xeb\x77\x26\x92\x92\x18\x07\x13\x32\xf5\x0d\xdc\xfb\xa6\xf2\xfe\x02\x00\x00\xff\xff\xae\xcc\x05\x3a\xfd\x01\x00\x00")

func wwwJavascriptMapzenWhosonfirstCatalogInitJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstCatalogInitJs,
		"www/javascript/mapzen.whosonfirst.catalog.init.js",
	)
}

func wwwJavascriptMapzenWhosonfirstCatalogInitJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstCatalogInitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.catalog.init.js", size: 509, mode: os.FileMode(420), modTime: time.Unix(1506039287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstCatalogJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x5b\x6f\xdb\x36\x14\x7e\x96\x7f\x05\xcb\x97\x48\x8d\x2b\x77\xb7\x97\x69\x7e\xd8\x86\xec\x86\xae\x1b\xda\x3c\x6c\x30\x8c\x80\x96\x8e\x2d\xa2\x0c\xa9\x92\x54\x5d\xaf\xc9\x7f\x1f\x78\x93\x28\x5b\xb1\x95\x00\x6d\x22\xf2\x3b\xe7\x3b\x3c\x37\xea\xe8\x13\x91\xe8\x9e\x34\xff\x01\x47\xcb\xf0\xc7\xc3\x03\xfa\xf2\x58\xcc\xdc\x53\xbe\xaf\x85\x12\x7c\x4b\xa5\xd2\x1d\x64\xb0\xe8\xe1\x23\xf8\xbc\x24\x9a\x30\xb1\x43\x4b\x94\x6e\x5b\x5e\x6a\x2a\x78\x9a\x7d\x99\xcd\x12\x43\xab\x80\x6d\xd1\x12\x99\xc7\xe4\x8a\x09\xf1\xa1\x6d\xae\xbe\x47\x1d\x8e\x56\x73\x54\x6e\x2c\x3a\x41\x08\x21\x2b\xd3\x48\xa1\x05\x5a\xa2\x4a\x94\xed\x3d\x70\x9d\x33\x51\x12\x03\xcf\xed\x4e\x29\x58\x31\x4b\x12\x0b\x6d\x25\x43\x4b\x2f\x70\x8d\xae\x16\x8b\x2b\x74\x8d\x3a\x78\x2d\x94\x8e\x9f\x1b\xa2\x6b\x4e\xee\xc1\x40\x69\x65\xb1\xb4\x2a\x66\x41\x99\xe0\x4c\x90\x0a\x2d\x7b\xf3\xa4\x6a\xb2\x2f\x66\xdb\xfc\xb3\x18\x4d\xe4\x0e\x8c\x8f\xa4\x6a\x72\xf7\x60\x8d\x71\x08\xba\x45\xa9\x5b\xcc\x25\x90\xea\xf0\x5e\x13\x0d\xe8\xc5\x12\x7d\xeb\xd4\x24\x89\x04\xdd\x4a\xee\x44\x1e\x7b\x41\xeb\x2a\x4d\x74\xab\xee\x4a\x51\x01\x5a\x7a\xa2\xd5\x95\x5b\xbd\x5a\x17\xc7\x38\x0d\x9f\xf5\x09\xee\x16\x3e\xeb\x80\xed\x04\x24\xd9\x47\x40\x09\xaa\x11\x5c\x41\x0c\x35\xa8\x8a\x68\x82\x96\x88\xb7\x8c\x45\xf2\x5a\x1e\x90\x37\xdd\x03\xfe\x78\xff\xd7\xdb\xbc\x21\x52\x41\x2a\xc9\x3e\x3b\x39\x4a\x49\x74\x59\xa3\x14\xc2\x89\xdd\xff\xa5\xe0\x4a\x30\xc8\x99\xd8\xa5\xf8\xe6\xdd\x3b\x3c\x37\xb1\x9b\x23\xc8\x62\xbf\xa0\x2d\x61\x0a\x82\x4a\xa7\x6e\x93\x1a\x62\xc7\xf3\xd8\x07\x4b\xc2\x47\x63\x2d\xec\xd1\x3f\x7f\xbe\xf9\x4d\xeb\xe6\x1d\x7c\x6c\x41\xe9\xd4\x21\x25\x7c\xcc\x49\x55\xdd\x7c\x02\xae\xdf\x50\xa5\x81\x83\x4c\xb1\x89\x2f\x9e\xfb\x40\x5b\xa0\x49\xba\x80\x17\x0d\xf0\x14\xff\x7a\x73\x1b\x8c\xd3\xb2\x85\x5e\x9d\x02\x5e\x39\xed\x8f\x73\x9b\xce\x12\x78\x05\x32\x4e\xe7\x90\x2f\x5e\xab\xf9\xe5\x6c\x2d\x85\xac\x94\xcb\x9a\x15\xf6\x8f\xa0\xf1\xba\x7b\xc0\xeb\x22\x12\x28\x45\xcb\x6d\x92\xb9\xcd\x9c\x01\xdf\xe9\xba\x98\x45\x90\xcd\xe1\x4e\x1f\x1a\x93\x29\xa6\x2e\xfb\x75\xb3\x68\x98\x56\x03\x85\x4a\xb4\xb2\xec\xd6\xfd\xc6\x56\x48\x94\x9a\x5d\xba\x7c\x5d\x20\x8a\x7e\x70\xbc\x05\xa2\xd7\xd7\xae\x24\x9d\xa7\x7b\x43\x56\x74\xdd\x95\x9e\xb5\x6f\x85\x0d\x1f\x76\x3a\x6d\xfa\xbf\x08\x96\xad\xf4\xda\x2b\x31\x5c\xfd\xa2\xb1\x01\x49\xe4\x14\x99\x2d\x6b\x71\xde\xb4\xaa\x4e\xb5\x0f\xb3\x15\x03\xa6\xc0\xe5\xde\x50\x81\x83\xca\x00\x75\xdb\x8f\xe1\x50\x4e\x9b\x12\xd2\x67\x82\x59\x1b\x24\xdf\xed\xbf\x7f\xdf\xbc\xc7\x73\x07\xcc\x06\x3e\xd5\x64\xc3\x20\x6e\x3c\xa5\x04\xa2\xe1\x86\x81\x79\x4a\xb1\xdd\xc7\x43\x19\xe7\xd9\xbb\x1a\x48\x05\xf2\x9c\x6c\x8d\x3b\x7b\x06\x32\x39\x69\x1a\xe0\xd5\xcf\x35\x65\x55\x7a\x24\x6d\x6a\xf4\xad\xa8\x20\xc5\x4e\x04\x67\x71\xd2\xc6\x21\x7f\x9e\x01\x91\xc4\x34\x7a\x1b\xe5\x51\xf2\x9a\xa8\xfa\x79\xe4\x91\xc4\x34\x72\x23\x30\x4e\xde\x4a\xfa\x3c\xee\x5e\x60\x1a\x75\x2b\xa9\x65\x8e\xbd\x4d\xef\x29\xdf\x3d\xd3\xdf\xb1\xcc\x44\x8f\x5b\x91\xf1\x63\xab\x5a\xec\x9f\x99\x71\xbd\xc4\x34\xfa\x57\x4f\x44\xdb\xaa\xb8\x93\x62\x7f\x8e\x58\x46\xc1\xee\x04\x06\xbc\x83\x0a\xb8\x04\x8e\xb2\xf5\x12\x34\xca\xad\x4b\xd0\x3e\x15\x2e\xf2\xc7\xd1\xbb\x78\xb2\xde\xd3\x59\x91\xf8\x9f\xa1\x23\x6d\x1b\x19\x9a\xdd\xe9\xca\x4e\xbb\xb3\x46\x94\xfb\x6e\xe5\xfa\xa9\xbd\xf6\xcd\xf3\x4a\x47\xed\xd8\x38\xa9\xbf\x68\xfa\x76\xd9\x5f\x99\xb6\xbb\x47\x98\x58\x24\xbe\x62\x12\x7f\xbf\xb8\x20\x75\x37\x4c\x32\x7a\x91\x24\x4f\xdc\x22\x41\x71\x7c\x9b\xc4\xef\x19\x31\xb9\xbd\x56\xfa\xf7\x9b\x40\x6b\x90\xab\xd0\xf9\xd6\xc5\xe0\x9d\xc6\xdf\x7d\x0e\xe2\xef\xa0\x01\xa0\x95\xb4\xdb\x37\x55\x1c\xbd\xe9\xb8\x78\xf6\xd2\xae\xd2\xd6\x68\x81\xbe\x7a\x1d\x7e\x8a\x64\xb1\x40\x9c\x70\xa1\xa0\x14\xbc\x52\xbd\x79\x26\xc5\x3a\x59\xdb\x9a\x2c\xf3\xb1\xfd\x77\x25\x30\x76\xae\x48\x2a\xec\xdf\x9d\x22\xfc\xa4\xda\x74\x78\xdf\x95\xa2\xe0\x4f\x26\xec\xd0\x93\xe8\x0c\x7a\x40\x66\x6b\x6c\x32\x59\x87\x9e\x44\x66\xd0\x03\x32\x53\xa5\x93\xb9\x02\x78\x12\x55\x2b\x69\x60\xea\x26\x0f\x5f\xe9\xd3\x3d\xd9\xe3\xa7\xf9\xd2\xe2\x73\x2d\x7e\xa1\x9f\xa1\x4a\xbf\xc9\xd0\x35\xc2\x0a\x0f\x4e\x6c\x1b\xc8\x24\x0b\x86\x22\x9b\x56\x6b\xc1\xcf\x08\x39\x40\x97\x75\xbd\x4c\xae\x40\xff\xa8\xb5\xa4\x9b\x56\x43\x8a\x4d\x66\xbf\x32\x25\x63\xde\x82\x69\xd6\x97\x55\x2c\x32\xed\xa5\xa5\x16\xfb\xfe\x70\xdd\xc1\x4e\xfb\xa5\x53\x9a\x1d\xcd\x2d\xf7\xa0\xc9\xc4\xab\x26\x49\x02\x78\xec\x9a\x31\xa4\xe7\x60\x5d\x41\x9c\x03\x75\x89\x7c\x0e\x14\x32\xf0\x2c\x5b\x9f\x34\x67\x6d\x0f\xee\x8a\xae\x91\x93\x30\x08\x5e\x32\x5a\x7e\x88\x67\x56\x08\xcd\xd6\xfa\x10\x4c\x1a\xc1\x60\x52\x8d\xda\x23\xb0\x7c\x37\x1e\xfb\x10\x34\xd7\xb2\x41\x13\xca\x54\x1c\x87\x1d\x68\x1f\x84\x9f\x0e\xbf\x57\x29\xf6\x90\x57\x18\x5d\xbb\xac\x71\xe2\xa6\xb2\xcc\x54\x90\xbe\x08\x4a\x72\xa5\x0f\x0c\xf2\x8a\xaa\x86\x91\x43\x86\x1e\x1e\x50\x3a\xba\x85\x96\x4b\x84\xb9\xe0\xe6\xbd\xd3\x8f\x92\xc9\x13\x40\x84\x37\x4c\x94\x1f\xb0\x3f\x5f\x02\x2c\xa7\x9c\x83\xbc\x75\x23\x32\xae\x69\x05\xb8\x48\xa2\x71\xd4\x0f\x97\xd1\x8c\x71\x4e\xbb\xb5\xe2\x29\xe5\x36\xc9\x8f\x94\x27\x6e\x56\xed\xa7\xe8\xe8\xc6\x4f\x43\xb4\xa3\xe6\xb3\x78\xd9\xff\xb9\x40\x43\x97\x8f\x7c\x71\x71\x83\xa7\xff\x75\x67\x62\x16\xcd\xc8\x49\xd0\xe4\x3e\xa5\x80\xd6\x87\x30\xb5\x2b\x2d\x29\xdf\xd1\xed\xc1\xc2\xe7\x76\xd6\x9f\xa3\xaf\x23\x43\x9e\x88\xf6\x51\xd5\x35\x12\x7c\xd9\x19\x99\xe0\xb6\x29\x2d\xc1\xd9\x33\xe8\x77\x5e\x7c\x7a\xd3\x8d\x05\x8e\x5a\x57\x29\x98\x6a\x08\xc7\x73\x84\xbf\x9b\x00\xa7\x95\x41\x9e\xa6\xee\x25\x16\x46\x94\x8a\x24\x47\x99\x06\xde\x70\x1b\x63\xa7\x9e\xda\xde\x22\xfc\x98\xea\xb8\x9b\x9c\x66\x5c\x24\x1c\xb5\xf3\x97\x8b\x59\x98\xa0\x7d\x3d\xf8\x8f\x30\x56\xd6\x7e\xe7\x98\xb9\x2f\x2e\x7e\x5d\x01\xdb\x16\xb3\xd9\x63\x96\x66\x45\x32\xfb\x3f\x00\x00\xff\xff\xc5\x31\xd7\x92\x55\x14\x00\x00")

func wwwJavascriptMapzenWhosonfirstCatalogJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstCatalogJs,
		"www/javascript/mapzen.whosonfirst.catalog.js",
	)
}

func wwwJavascriptMapzenWhosonfirstCatalogJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstCatalogJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.catalog.js", size: 5205, mode: os.FileMode(420), modTime: time.Unix(1506374038, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstRenderJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x41\x6e\xdb\x3a\x10\x5d\x4b\xa7\x18\xe8\x2f\x22\xc1\xfe\x4a\xfe\x36\x8a\xf0\x11\x14\xdd\x76\xd5\x5d\x11\x04\xb4\x38\xae\x59\xd3\x92\x41\x8e\x63\xa7\x89\x81\xde\xa1\x37\xec\x49\x8a\x21\x29\x59\xb2\x65\x65\x91\x44\x12\xdf\x7b\x33\x9c\x79\x33\xc8\x8b\x30\xb0\x11\xdb\x9f\x58\x43\xd9\x3e\xbc\xbf\xc3\xdb\xb1\x88\xfd\x5b\xbe\x5f\x35\xb6\xa9\x97\xca\x58\xea\x20\x83\x8f\x01\x3e\x82\xcf\x0d\xd6\x12\x0d\x94\x90\x2e\x77\x75\x45\xaa\xa9\xd3\xec\x2d\x8e\x23\x8e\x6a\x51\x2f\xa1\x04\x7e\x8d\x6e\x3c\xf0\x59\x0a\x12\x37\xf7\xd0\x81\xe5\x1c\x2a\x3a\x38\x4a\xe4\x48\x7b\x23\xb6\x5b\xa7\x28\x9b\x6a\xb7\xc1\x9a\xf2\xca\xa0\x20\xfc\xac\x91\xdf\xd2\x44\xaa\x97\x24\x2b\x18\x1f\xb0\xb9\x45\x7a\x24\x32\x6a\xb1\x23\x4c\x93\x4a\x0b\x6b\x93\x39\x24\x72\xb7\xd9\xa2\x61\x6c\x2b\xee\x93\x70\x5c\xfe\x51\x4b\x48\x1f\x8d\x11\xaf\xb9\xb2\xee\x6f\x2a\xb3\xec\x8d\x4f\xa2\xee\x5e\x7c\x89\x70\xcb\x67\xad\x2c\xb5\x19\x3b\x91\x63\x1c\x01\x00\xf0\x23\x6a\x8b\xc0\x82\xf4\xba\xc5\x66\x99\xca\x0c\xca\x12\x92\x66\xf1\x03\x2b\x4a\xa6\x54\xa5\xaa\xce\x55\x3b\x41\x4f\xe3\xd4\xab\xa6\x26\xac\xe9\x8c\x4b\x78\xe8\x71\x87\x31\xae\xd5\xcf\x6e\x45\x9d\x64\x45\x14\x8a\x10\x08\x39\x97\xb2\x96\x9f\x56\x4a\xcb\x34\x04\xeb\xa7\xd3\xd6\xba\x0f\xf3\x4c\x8f\x32\x48\x3b\x53\xb7\xed\x2b\xbc\xf8\x71\x3e\xe8\xbd\xaa\x68\xb4\xf7\x5d\x11\xf9\xa2\x24\x16\x1a\x27\xd2\x77\xe7\xc1\x00\xee\xf9\x5a\xfb\xbd\x90\xfb\xfd\xaf\x44\x12\x4a\x5b\x47\x6b\x83\x2d\x1b\x03\xe9\x1a\x54\x0d\xd2\xb5\xa7\x2b\xb5\x69\xf6\x53\xf1\x4d\x08\xee\xb0\x5a\x2c\x50\xbb\x36\x40\x09\x6b\xff\xbd\x3b\x7c\xae\xe8\xc0\xa3\xc1\xb7\x84\xff\xf9\xb2\x30\x83\x24\x4f\x60\x06\x6b\xb8\xbf\x80\xaf\x50\x4c\x77\x8e\x56\x17\xa1\x2f\xd1\x5f\xf1\x40\x5f\x1a\x89\xe9\x29\xb5\x40\xf2\xfa\x83\x0e\x3a\x8c\x3b\x1e\x31\xda\xd5\x34\x64\x9b\x46\x47\x5a\x34\xf2\xf5\xdc\xd6\x82\x44\x2a\xbf\xad\x9f\xe6\xae\x0e\x81\x11\xd4\x07\x49\x30\xb9\x2f\x68\x9a\xfd\xe0\xdc\xe7\x1d\x10\xe7\x87\x03\xab\x7a\xbe\x77\xc5\xc0\xa8\xcd\xbe\x1b\x58\x0f\x0a\x76\x75\xd0\xc2\x3b\x35\xea\x59\x95\x27\xfd\x63\xab\x56\xcd\xce\x17\x2a\xd7\x58\x7f\xa7\xd5\x60\xb1\x84\xc3\x12\xee\xba\xe1\x77\x21\x2f\xc6\x37\xf9\xf3\xeb\x77\x32\xbe\x54\x4e\x3a\x0f\x25\xfc\x77\x5d\x27\xd4\xfa\xee\x69\x5c\xc6\xb9\x45\xd9\xa9\x9e\xee\xf4\xe5\x6c\x30\x4d\x95\x77\x05\x28\x78\xf0\x77\x2d\x40\xcd\x66\x21\x8d\xae\xf7\x8a\x70\x33\xa1\xac\x55\xdf\xb4\xd7\x8d\xa2\x7c\xf2\x3c\x21\xff\xf0\x84\xa8\x7e\x4b\x39\xc6\x35\xcf\xf0\xcd\x06\x67\x0c\x1e\x6f\x37\x43\x47\xba\xcd\x6d\x18\xef\xb6\x67\xbb\xb5\xe4\x47\x5c\x16\xd1\xed\xad\x4f\x7f\x45\x1b\x6d\xb7\x58\x29\xa1\xab\x95\x30\x36\x95\x59\xd1\x67\xf0\x9e\xfd\x78\x0d\x33\x9a\x1f\xcf\xb6\x98\x92\x7d\x4b\x8c\x00\x48\x91\xc6\x13\x86\x1b\x77\x0a\x3d\xb9\x17\x4e\x1b\xc1\xc9\xf6\x2b\x17\x76\x41\xbf\x64\x8c\x69\x4b\x16\xc5\x11\xff\x1b\xd0\x77\x60\x11\xc7\xc7\x2c\xcd\x8a\x28\xfe\x1b\x00\x00\xff\xff\xee\x07\x3a\xfe\x68\x08\x00\x00")

func wwwJavascriptMapzenWhosonfirstRenderJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstRenderJs,
		"www/javascript/mapzen.whosonfirst.render.js",
	)
}

func wwwJavascriptMapzenWhosonfirstRenderJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstRenderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.render.js", size: 2152, mode: os.FileMode(420), modTime: time.Unix(1506219354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCssMapzenWhosonfirstCatalogCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x51\xcd\x4e\xc3\x30\x0c\xbe\xf7\x29\x8c\x26\x8e\x99\xca\xa4\x5d\xb2\xa7\x71\x1b\xb7\xb5\xc8\x9f\x12\x0f\x36\x10\xef\x8e\x9a\x44\xa5\x08\x26\x9f\xfc\x39\xdf\x8f\x9d\x83\xc3\x08\x9f\x1d\x00\xc0\x42\x3c\x2f\xa2\xe1\xdc\xf7\xf1\x76\x29\xd0\x3b\x1b\x59\x34\xbc\xf4\xfd\xf3\xa5\xfb\xea\xba\xa3\x21\x41\xb6\xb9\x31\x0c\xe7\x68\xf1\xae\x7d\xf0\x54\xe6\x82\x83\xa5\x36\xb4\xec\x49\x35\xcd\x13\xb9\x2a\x38\x05\x2f\x6a\x42\xc7\xf6\xae\x21\xa3\xcf\x2a\x53\xe2\x69\xef\x56\xcd\xd6\x7e\x08\xc9\x50\x52\x39\xe2\xc8\x7e\xd6\x70\xf5\x99\xa4\xfa\xa4\x66\xf2\x46\x49\x78\x44\xab\xd0\xf2\xec\x35\x48\x88\x95\x1b\xd1\x98\x42\xda\x76\x71\x98\x66\xf6\x15\x58\xfb\xa2\xb3\x34\x9d\x01\xc7\xd7\x39\x85\xab\x37\x6a\x0c\x36\x24\x7d\x20\xb3\xd6\x3e\x88\x86\x1c\x2c\x1b\x90\x85\x7d\xc5\x85\x6e\xd2\x9c\x2d\x4d\xf2\xd7\x67\x07\xa8\x21\x88\x04\xa7\x8f\xdb\x2d\xb6\x88\xc7\xd3\x99\x5c\x89\x63\x5a\x9c\x7f\x85\x7f\xbf\x7f\x60\xd6\xa2\xfe\x24\x85\x27\x76\x31\x24\x41\x5f\x4f\x17\x13\x3d\xda\x19\x0e\x68\xd6\xda\x7d\x55\xe6\x0f\xd2\xd9\xa1\xb5\x85\xfc\x1d\x00\x00\xff\xff\xc9\x36\x05\x7b\x2e\x02\x00\x00")

func wwwCssMapzenWhosonfirstCatalogCssBytes() ([]byte, error) {
	return bindataRead(
		_wwwCssMapzenWhosonfirstCatalogCss,
		"www/css/mapzen.whosonfirst.catalog.css",
	)
}

func wwwCssMapzenWhosonfirstCatalogCss() (*asset, error) {
	bytes, err := wwwCssMapzenWhosonfirstCatalogCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/css/mapzen.whosonfirst.catalog.css", size: 558, mode: os.FileMode(420), modTime: time.Unix(1506368544, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCssMapzenWhosonfirstRenderCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xdf\x6a\xf3\x30\x0c\xc5\xef\xf3\x14\xfa\xf8\xd8\xa5\x4b\x57\xd8\x8d\xf7\x34\x4e\xac\x24\x62\xfe\x87\xac\x6c\x2d\xa3\xef\x3e\x12\xbb\xa1\x66\x2d\x8c\x5c\xe9\x28\x3a\xd2\xef\x78\x71\xf0\xdd\x01\x00\x38\xca\xa2\xb2\x5c\x1c\x2a\xb9\x24\xd4\x10\x62\xc0\xf7\xad\xe5\x0d\x4f\x14\xf4\x31\x9d\x4b\x9d\x8c\xb5\x14\xa6\x22\x5c\xbb\xee\x60\x17\x9f\x90\x41\x4c\xef\x70\xb7\x0b\xa8\x66\xa4\x69\x16\x7d\x42\x5f\x06\xc7\x18\x44\x8d\xc6\x93\xbb\x68\xc8\x26\x64\x95\x91\x69\x2c\xcd\x2f\xb2\x32\xeb\xd7\xe3\xf1\xa5\xd4\x7d\x64\x8b\xac\x72\x32\xc3\xba\x0c\x96\x90\x51\x1e\xec\x13\xae\x2b\x3f\x91\x85\x06\xe3\x94\x71\x34\x05\x0d\x12\x53\x7b\x2f\xec\x04\x95\x68\x13\xd6\xba\x71\x9d\xab\x5f\x6f\x86\x8f\x89\xe3\x12\xac\x1a\xa2\x8b\xac\xff\xa3\x5d\xbf\xe6\x3c\x89\xe9\x3e\xaa\xaa\xf6\x51\x24\xfa\xda\xd8\x16\xdc\x35\x1d\x8e\xa2\x21\x47\x47\x16\x64\xa6\x00\xff\xc8\xa7\xc8\x62\x82\x34\x26\xbc\x85\xf7\xe4\xc7\xdd\x54\xf0\x2c\x95\x78\x35\xfe\xcd\xd7\x46\x70\x38\xbd\xa1\x6f\x71\xf5\x48\x9c\x45\x0d\x33\x39\x7b\x43\xbf\x83\x7b\x72\x68\x6b\xe1\xcc\x63\x87\x5b\x10\x7f\x30\x29\x8f\x79\x9b\x7f\x88\xd5\x52\x34\x5a\x4d\xf5\xb0\xeb\x4d\x04\xd7\xee\x27\x00\x00\xff\xff\xcd\x95\x93\x60\xe8\x02\x00\x00")

func wwwCssMapzenWhosonfirstRenderCssBytes() ([]byte, error) {
	return bindataRead(
		_wwwCssMapzenWhosonfirstRenderCss,
		"www/css/mapzen.whosonfirst.render.css",
	)
}

func wwwCssMapzenWhosonfirstRenderCss() (*asset, error) {
	bytes, err := wwwCssMapzenWhosonfirstRenderCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/css/mapzen.whosonfirst.render.css", size: 744, mode: os.FileMode(420), modTime: time.Unix(1506219354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"www/index.html": wwwIndexHtml,
	"www/javascript/mapzen.whosonfirst.catalog.init.js": wwwJavascriptMapzenWhosonfirstCatalogInitJs,
	"www/javascript/mapzen.whosonfirst.catalog.js": wwwJavascriptMapzenWhosonfirstCatalogJs,
	"www/javascript/mapzen.whosonfirst.render.js": wwwJavascriptMapzenWhosonfirstRenderJs,
	"www/css/mapzen.whosonfirst.catalog.css": wwwCssMapzenWhosonfirstCatalogCss,
	"www/css/mapzen.whosonfirst.render.css": wwwCssMapzenWhosonfirstRenderCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"www": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.catalog.css": &bintree{wwwCssMapzenWhosonfirstCatalogCss, map[string]*bintree{}},
			"mapzen.whosonfirst.render.css": &bintree{wwwCssMapzenWhosonfirstRenderCss, map[string]*bintree{}},
		}},
		"index.html": &bintree{wwwIndexHtml, map[string]*bintree{}},
		"javascript": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.catalog.init.js": &bintree{wwwJavascriptMapzenWhosonfirstCatalogInitJs, map[string]*bintree{}},
			"mapzen.whosonfirst.catalog.js": &bintree{wwwJavascriptMapzenWhosonfirstCatalogJs, map[string]*bintree{}},
			"mapzen.whosonfirst.render.js": &bintree{wwwJavascriptMapzenWhosonfirstRenderJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
