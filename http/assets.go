// Code generated by go-bindata.
// sources:
// www/index.html
// www/javascript/mapzen.whosonfirst.catalog.init.js
// www/javascript/mapzen.whosonfirst.catalog.js
// www/javascript/mapzen.whosonfirst.render.js
// www/css/mapzen.whosonfirst.catalog.css
// www/css/mapzen.whosonfirst.render.css
// DO NOT EDIT!

package http

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wwwIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\xcf\x8e\x9b\x30\x10\xc6\xcf\xc9\x53\x8c\xe6\xd2\x5b\xfc\x02\x86\x4b\xdb\x48\x95\x2a\xe5\xd0\x43\x8e\x95\x83\x87\xe2\xc4\xd8\xc8\x33\x90\x66\x9f\x7e\x05\x86\xfc\xd1\xee\x2d\x1b\x2e\xd8\x9f\x3f\x7e\xfe\x3c\x8c\x75\x23\xad\x2f\xd7\x00\xba\x21\x63\xc7\x01\x80\x16\x27\x9e\xca\x7d\x13\xbf\x31\xec\x02\x6c\x5d\x62\x81\xef\x46\x8c\x8f\xff\xe0\x4f\x47\xbe\x0f\x27\x4a\x5a\x65\x5f\xfe\xc6\xbb\x70\x02\xb9\x74\x54\xa0\xd0\x7f\x51\x15\x33\x42\x22\x5f\x20\xcb\xc5\x13\x37\x44\x82\xd0\x24\xaa\x0b\xac\x98\x55\x6b\xba\x37\x0a\x9b\x23\x6f\x26\xa7\x7a\x0e\x73\x6e\x22\xc7\x50\x8f\x41\x37\x55\x0e\xfa\xe5\xdc\x44\xc1\x52\x7a\xc4\x72\x95\x5c\x27\xf7\xe0\xa3\x19\x4c\x56\x11\x38\x55\x05\xde\x84\x05\xda\xba\xf1\xdc\x58\x6a\x95\xf5\x67\x58\x9f\x04\x7c\x05\x7a\xa9\xe9\x2b\xd9\x2e\x38\x79\xdc\x00\xe6\x67\x6c\x4f\xb5\xf4\xa7\x3e\x44\x7b\x99\xf7\xb6\x6e\x00\x67\x0b\xac\x4c\x18\x0c\x63\x56\x01\x74\x1d\x53\x5b\xae\x57\xda\x85\xae\xbf\x8f\x86\x93\xfb\x1c\xeb\xbf\xce\x22\x04\xd3\xd2\x6d\x36\x18\xdf\x53\x81\x08\x9d\x37\x15\x35\xd1\x5b\x4a\x05\xfe\x0c\x42\x09\x0c\xec\x77\x5b\xf8\xf5\x63\xfa\xf1\x2b\x7d\xe8\x45\x62\x98\xb9\xdc\x1f\x5a\x37\x93\x7d\x8c\xa7\xbe\xc3\xf2\xf7\xf4\xd6\x2a\x1b\xaf\xb1\x54\xce\x35\xcf\x96\xf0\x96\xc4\x38\x3f\x9d\xdb\xba\xe1\xc3\x72\x22\xee\xbd\x3c\x2e\x5f\x87\x5a\xe5\x6a\x68\x95\xef\xf1\x7b\x00\x00\x00\xff\xff\xe7\x07\x9f\xd4\xcf\x03\x00\x00")

func wwwIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwIndexHtml,
		"www/index.html",
	)
}

func wwwIndexHtml() (*asset, error) {
	bytes, err := wwwIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/index.html", size: 975, mode: os.FileMode(420), modTime: time.Unix(1506645651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstCatalogInitJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xc1\x6a\xc3\x30\x10\x44\xcf\xeb\xaf\x58\x7c\x92\x21\xe8\x07\x4c\x0e\x6d\x09\x34\xd0\x63\xa1\xc7\xa2\x4a\xeb\x44\x44\x59\x19\x69\x15\x93\x86\xfc\x7b\x91\x6d\x9a\x5b\x4e\xd2\xa2\x99\xc7\x8c\x76\xf2\xec\xe2\xa4\x8d\x73\xbb\x0b\xb1\x7c\xf8\x2c\xc4\x94\x54\x1b\xa2\x71\xed\x06\x87\xc2\x56\x7c\x64\xac\xb3\xa2\xaa\xe9\x6e\x0d\x34\x70\x31\x09\x7f\x8a\x48\x64\xdc\xa2\x8b\xb6\x9c\x89\x45\x1f\x48\x76\x81\xea\xf5\xf5\xba\x77\x95\x12\x4f\x65\x6c\xbb\xbe\x5a\x16\xb9\x8e\x6c\x83\xb7\x27\xdc\xfe\xc3\x55\x77\x6b\x1a\x00\x49\x57\xbc\x35\x88\x88\x00\x33\xdf\xbb\x67\xec\x29\x0e\xdf\xde\xcd\x6c\x80\x59\x3a\x9a\x94\x69\xcf\xa2\xbc\xd3\x17\x13\x0a\x75\x7d\xe5\xc2\xd9\x8c\xbf\xc4\x7a\x3a\xc6\x1c\x79\xf0\x29\x8b\xb6\x46\x4c\x88\x07\xbd\x04\x54\xde\x3d\xaa\xaa\x94\xc7\x25\xd0\x92\x22\xe1\x16\x9f\x10\x12\xb1\xa3\x34\x9b\xe6\x24\xf0\x30\x52\x2e\x41\xf2\xb3\x0e\xab\x64\x2d\x01\xeb\xa8\xcd\x38\x12\xbb\xb7\xa3\x0f\x4e\xa5\xe5\xed\x3e\x1f\xf7\x1a\xcb\x1a\xb1\x47\x54\x54\x17\x01\x60\x23\xe7\x18\x48\x87\x78\x50\xed\xd7\xfb\xcb\x67\xbb\x41\x5a\xc5\x00\xeb\x77\x26\x92\x92\x18\x07\x13\x32\xf5\x0d\xdc\xfb\xa6\xf2\xfe\x02\x00\x00\xff\xff\xae\xcc\x05\x3a\xfd\x01\x00\x00")

func wwwJavascriptMapzenWhosonfirstCatalogInitJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstCatalogInitJs,
		"www/javascript/mapzen.whosonfirst.catalog.init.js",
	)
}

func wwwJavascriptMapzenWhosonfirstCatalogInitJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstCatalogInitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.catalog.init.js", size: 509, mode: os.FileMode(420), modTime: time.Unix(1505838717, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstCatalogJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\x5f\x73\xdb\xb8\x11\x7f\x96\x3e\x05\xc2\x17\x93\x63\x99\xca\xf5\xcf\x4b\x54\x3d\x5c\x6f\x94\x4b\xaf\x8e\xdd\xb1\xd5\x9b\x76\x34\x1a\x0f\x44\xae\x44\x34\x14\xc1\x00\x60\x64\x35\xf1\x77\xef\x2c\x00\x02\xa0\x44\xcb\x52\xf5\x10\x87\xc0\xef\xb7\xbb\x58\xec\x1f\x00\xdf\xa8\x20\x5b\x5a\xff\x17\x2a\x32\x6d\xff\xf3\xe3\x07\xf9\xfe\x32\x19\x9a\xaf\x74\x57\x70\xc9\xab\x35\x13\x52\x39\x48\x67\xd0\xc2\x7b\xf0\x69\x46\x15\x2d\xf9\x86\x4c\x49\xbc\x6e\xaa\x4c\x31\x5e\xc5\xc9\xf7\xe1\x90\x10\x42\x50\x73\x46\xb3\x02\xc8\xd4\xf0\xdb\x41\x09\xe5\x1a\xc7\x86\x83\xe1\xe0\xaa\xe4\xfc\x4b\x53\x5f\x7d\x20\x8e\xcf\xf2\x11\xc9\x56\xc9\xf7\xe1\x00\x09\xe6\x5f\xa4\xd5\x82\x2b\x4e\xa6\x24\xe7\x59\xb3\x85\x4a\xa5\x25\xcf\x28\x32\x52\x3d\x93\xf1\x72\xe2\xc1\x8d\x28\xc9\xd4\x52\xae\xc9\xd5\x78\x7c\x45\xae\x89\x23\x14\x5c\xaa\xf0\xbb\xa6\xaa\xa8\xe8\x16\x10\xca\x72\x8d\x65\xf9\xe4\xd0\x00\x5e\x95\x9c\xe6\x64\xea\x4d\x15\xb2\x46\x3b\x07\xc3\xc1\x00\x01\x8a\x8a\x0d\xa0\x13\x85\xac\x53\xf3\x31\x31\xb3\x6c\x4d\x62\x33\x90\x0a\xa0\xf9\xfe\x51\x51\x05\xe4\xdd\x94\xfc\x49\xf3\x51\x83\x00\xd5\x88\x0a\xf1\x2f\x5e\xa2\x54\x54\x35\xf2\x29\xe3\x39\x7a\xd1\x48\x58\x5c\x99\xd1\xab\x25\x82\x3b\x38\x05\xcf\xea\x08\x37\x87\x67\x65\xb0\x56\xa8\xa0\xbb\x00\x24\x40\xd6\xbc\x92\xe0\x61\x88\xc9\xa9\xa2\x64\x4a\xaa\xa6\x2c\x2d\x53\x89\x3d\x69\x6d\xb5\xb3\xbf\x3d\xde\xdf\xa5\x35\x15\x12\x62\x41\x77\x49\x60\x7b\x46\x55\x56\x90\x18\xdc\xea\x32\x5e\x49\x5e\x42\x5a\xf2\x4d\x1c\xcd\x1e\x1e\xa2\x11\x6e\xd1\x88\x40\xd2\x59\x3e\x59\xd3\x52\x42\x28\x68\x15\xa3\xb2\xc4\x6e\xc6\xcb\xd1\xa6\x08\xf8\x8a\x76\xc2\x8e\xfc\xeb\xf3\xed\x27\xa5\xea\x07\xf8\xda\x80\x54\x71\x4b\x11\xf0\x35\xa5\x79\x3e\xfb\x06\x95\xba\x65\x52\x41\x05\x22\x8e\x70\x27\xa3\x91\xdd\xd2\xa4\x23\x15\x09\xbc\x86\x2a\x8e\x7e\x9d\xcd\x5b\x3b\x95\x68\x20\x94\x28\xa1\xca\xb5\x8a\x97\x91\x0e\x63\x01\x55\x0e\x22\x0c\x63\x1b\x1b\x87\xd6\x66\x5c\xe4\xd2\x84\xc8\x22\xb2\x9f\xa0\xa2\xa5\xfb\x88\x96\x41\x18\x67\xbc\xa9\x74\x40\x99\xb9\xb4\x84\x6a\xa3\x8a\x23\x27\xac\xf6\x4f\x6a\x5f\xb7\x89\xe6\x86\x71\x0c\x75\x2d\x42\x91\x92\x37\x22\xeb\x0e\x9b\x7f\xd7\x5c\x90\x18\x11\x6c\xfa\x7e\x42\x18\xf9\x8b\xd1\x3e\x21\xec\xfa\x3a\x8c\x72\xe1\xed\x59\x30\x17\x30\xda\xca\x45\x84\x2a\xa3\x65\x10\xf5\xef\x5a\xe3\x16\x6a\xe9\xa2\xc1\xfe\xf1\x33\x68\x0d\x11\x44\x13\x71\x46\x5b\x9e\xd6\x8d\x2c\x62\x15\xc6\x15\x94\x12\x5c\x14\x7a\xba\x41\x8a\x16\xa9\x23\x25\x5c\x9a\x11\x27\xb9\xf0\x61\xd1\x09\xc8\xf9\xbf\xff\x31\x7b\x8c\x46\x06\x97\x1c\xb9\x57\xd1\x55\x09\x61\xe5\xc9\x04\x50\x05\xb3\x12\xf0\x2b\x8e\xf4\x7c\x74\xcc\x33\xae\x7e\x2a\x80\xe6\x20\x4e\xf1\x0b\x47\xee\x50\x52\x5a\xd7\x50\xe5\xbf\x14\xac\xcc\xe3\x03\x32\xa6\xeb\x1d\xcf\x21\x8e\x0c\x25\x4a\x7a\xec\xde\xd7\x97\x69\x0f\x08\xe7\xe9\xd6\xdb\xdd\xa3\xb9\xa0\xb2\xb8\x48\x73\x40\x38\x4f\x33\x12\xfa\x34\x37\x82\x5d\xa4\xd8\xe3\xcf\xd3\xdb\x08\xd6\xeb\x6a\xb6\x65\xd5\xe6\x32\x67\x87\x94\x33\xdd\xad\x29\x7d\xfa\x65\xc1\x77\x97\x05\x9a\x27\x9c\xa7\xfb\xa6\x77\x9f\xb5\x80\x27\xc1\x77\xa7\xb4\x0a\xbf\xcd\x0e\xdf\x51\xda\x89\xfa\x37\xb0\x41\x8c\xbe\x81\x0c\x62\xea\x0d\xa4\x0f\x82\xb7\x94\x87\x7b\xf6\xd6\xa2\xbc\x87\x93\xc9\xc0\xfe\x3a\x55\x09\xcb\x46\xd7\x62\x27\x29\xe9\x2f\xcd\x8a\xb0\xca\x56\x29\x5b\x91\x75\xbf\xc7\x81\x85\xf2\xb5\x18\x5d\xe4\x5b\x8d\xaf\x93\xc1\x21\x40\xd7\xf6\x00\x14\x72\x7c\x9b\x69\xd1\xab\xfd\x93\xd9\xa3\xb6\xc5\x0c\x7a\x5a\x09\x82\x5f\x69\x22\xad\x64\xdf\x4c\x82\x36\x10\x9c\x37\x42\x2b\x6c\x73\x39\x00\x3a\x33\x90\xb1\x68\x8b\xdf\x72\x62\x9c\xdb\x29\x7d\x0e\x64\x9b\xd2\x01\xa4\x11\xcc\x21\x30\xab\x9d\x36\x9f\xcf\x5e\x82\x49\xbc\x25\x19\x93\x9f\xde\xb7\xbf\xc9\x60\x3c\x26\x15\xad\xb8\x84\x8c\x57\xb9\x3c\x36\x16\x23\xd0\xc9\xd0\x15\x4b\x5b\xf1\xda\xaa\x9e\x32\x28\xcb\x53\x89\x94\xeb\x44\x0a\x1b\x05\x32\xce\xca\x5f\x83\x4f\x92\x1e\x97\x6a\xa7\x5f\xa0\xda\xe1\xcf\x52\x8c\xe8\x5e\xb5\x3a\x3d\x2f\x50\xeb\xf0\x67\xa9\x45\x74\xaf\x5a\xcc\xf5\x0b\xb4\xb6\xf0\xb3\x94\x36\x82\xf5\x7b\xd8\x94\x8d\x4b\x7c\xec\x19\xe7\x79\x59\xe3\x53\xc5\x3f\xb2\x67\xc8\xe3\x3f\x26\xe4\x9a\x44\x32\xea\xb5\x46\x17\xa6\x0b\x6c\x39\xa4\xae\x1a\xa5\x78\x75\x82\x6c\x00\x41\xac\x7a\x56\x2a\x41\xfd\xac\x94\x60\xab\x46\x41\x1c\x61\x66\xdc\x60\xf2\xe1\x31\x9b\x25\x61\x8a\x86\xa4\xf3\xce\x41\x05\xdf\x1d\x2f\xd8\x2d\xf6\xb8\x36\x1b\xe1\x7d\xcb\xdc\x82\xa2\xe7\x35\x35\x4d\x69\xe1\x7d\x3d\x0d\x55\x9f\x06\xba\x74\x3a\x0d\x73\xe1\x7f\x1a\xd6\xc6\xeb\x1b\x3a\x7d\x78\xbd\xb1\x8a\xd6\x7d\x61\x0b\x3b\xf2\xaf\xdd\x26\x5e\x65\x25\xcb\xbe\x84\x37\x64\x73\x03\x44\x8e\xee\x18\x80\x31\x07\xc1\xdd\x78\xe0\x2b\x31\x94\xe9\xa6\x3f\x38\x12\xdb\x5c\x06\x12\xca\x75\xaa\x35\xe6\xa0\x28\x2b\xa5\xce\xb8\x76\x01\x2f\x07\x3b\x19\xf6\xd7\xb8\x5d\x5d\x32\x19\xb6\x57\x52\x9a\x15\xb0\x68\x04\x5b\xda\x12\x3d\x31\xd4\xbe\x0b\x84\xbd\x9d\x6a\x89\xe6\xd2\x37\x1c\x5c\x15\x2c\x87\xd6\x90\xf0\xe6\x97\x7c\x1f\xfa\x13\x92\x9d\x0f\x23\x69\x03\xca\x86\xd1\x5f\xf7\x7f\xcb\xe3\xc8\x42\xdc\x21\xc9\x7e\xa7\xac\xaa\x40\x7c\x9a\x7f\xbe\x25\x53\x12\x45\xfe\xae\x19\x3a\x20\xd4\x8b\xbe\x68\x55\x6b\x4f\x85\x06\xc6\x7a\xe1\x07\xed\xd6\xbb\x20\xb8\x20\xae\x78\xbe\x77\x4d\x0b\x3f\x3a\x37\xd2\xbe\xc6\x6a\x05\x8f\xc7\xe4\x97\xfb\xbb\xdf\x67\x0f\x73\xf2\xf3\xed\x2d\x99\x7f\x9a\x91\xbb\xfb\xf9\xcd\xaf\xb3\xfb\xdf\x1e\xef\xef\xc8\xe3\xfc\x9f\x1f\x3f\x92\xf9\x3d\x69\x07\x3e\xcd\x1e\x66\x69\x9a\x06\x66\xed\x04\xee\xd6\xa9\x13\x6c\xce\xbe\x39\x3f\x59\xf4\x41\x49\x91\x6a\x5f\x42\x34\x22\xd1\x96\x3e\xdf\x14\xc0\x36\x85\xfa\x40\xfe\xfc\xfe\x7d\xfd\x4c\xde\xb1\x6d\xcd\x85\xa2\x78\xa9\x7d\x7d\x86\x7f\x03\xb1\x2e\xf9\xee\x03\x91\x99\xe0\x65\x19\x4e\x46\x1d\x2f\xd6\x82\xd7\xb2\x1d\xd0\x4f\x3c\xda\x39\x53\x12\x6d\x80\xff\x47\x62\x09\xc4\xe8\xd7\xb0\xde\xa7\xb5\xd4\x3c\x1b\xd8\x3f\x4f\xe8\xd4\x18\x3d\xbe\x88\x90\x03\x42\x31\x90\xd1\xd2\x3d\x7e\x58\x4d\xee\x12\x7c\xb9\x60\x2f\x2a\x08\xee\xd6\x8f\x61\xde\x6b\xd1\x49\xb0\xb3\xb8\xde\x0d\xf0\xed\x85\xeb\x40\x0a\x28\xb1\xf7\xab\x18\x8f\x7b\x15\x22\xb0\xe3\xdc\x2d\xad\xcf\x8c\x83\x2d\xad\x0f\x62\x80\xe5\x26\x00\xea\xee\x7e\x5d\x76\x8f\xd7\x8c\x93\xb7\x29\xd1\x15\x5f\xc2\x5a\x9d\xd9\x57\xdd\x7b\x10\x06\xe1\x79\x1c\x43\x72\x3a\x5c\x5d\xa3\xb5\x7b\x97\x72\xc2\xda\x49\xeb\x68\xc7\x56\x5d\x9f\x3b\x61\xee\x4a\xda\x9d\xf7\x02\xbd\x84\xa3\x3b\x8b\x12\xdd\xca\xf2\xff\xd7\xbb\x8e\x54\xd4\xe3\x04\xeb\x6a\x96\x0b\xba\x7b\xda\xd2\xda\x3d\x08\x9a\x2a\xdc\x0e\x87\x95\x50\x23\xc2\x2a\xbc\x06\xaa\x1a\x01\xaf\x97\xb5\x36\x95\x2c\xb0\x9b\x80\x61\x8a\xbf\x33\x50\x9d\xd8\xee\xc9\x36\xcc\x4e\x1d\x09\x54\x99\xd7\xe7\x5a\x9a\x14\xf8\x50\x52\xc5\x54\x93\x43\x47\x69\xa9\x4f\x51\x1d\x18\xaf\x36\x0e\xa7\x1f\xcc\xdb\xdf\x6d\xfa\xd9\xa4\x1d\xad\xd9\xdf\x61\x1f\xfa\x17\x17\xd3\xd7\x3a\x4d\x9e\xde\xd0\x9a\xdd\x7c\x81\xbd\x7f\x9f\x0a\xc5\x9a\x2c\x73\xc2\xd1\xbd\x57\xe8\xcc\x64\x72\x08\xc3\x14\xfb\x9d\xc1\x2e\x5e\x94\x54\x8d\xd0\xf6\xe5\x88\xfc\xf4\x87\x6e\x06\xd0\xbd\xae\xde\xb7\xe9\x06\x38\xd6\xf8\xd8\xfa\xb3\xd5\xad\x01\x29\xcd\xf3\x39\x6f\x23\xf7\x65\x68\x7b\xb7\xb3\xcd\x36\x5b\xdc\x74\x3b\xfa\x92\xc4\xc9\x64\x30\xfc\x5f\x00\x00\x00\xff\xff\x72\x54\x9f\x45\xcc\x18\x00\x00")

func wwwJavascriptMapzenWhosonfirstCatalogJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstCatalogJs,
		"www/javascript/mapzen.whosonfirst.catalog.js",
	)
}

func wwwJavascriptMapzenWhosonfirstCatalogJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstCatalogJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.catalog.js", size: 6348, mode: os.FileMode(420), modTime: time.Unix(1506648410, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJavascriptMapzenWhosonfirstRenderJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\x41\x6e\xdb\x3a\x10\x5d\x4b\xa7\x18\xe8\x2f\x22\xc1\xfe\x4a\xfe\x36\x8a\xf0\x11\x14\xdd\x76\xd5\x5d\x11\x04\xb4\x38\xae\x59\xd3\x92\x41\x8e\x63\xa7\x89\x81\xde\xa1\x37\xec\x49\x8a\x21\x29\x59\xb2\x65\x65\x91\x44\x12\xdf\x7b\x33\x9c\x79\x33\xc8\x8b\x30\xb0\x11\xdb\x9f\x58\x43\xd9\x3e\xbc\xbf\xc3\xdb\xb1\x88\xfd\x5b\xbe\x5f\x35\xb6\xa9\x97\xca\x58\xea\x20\x83\x8f\x01\x3e\x82\xcf\x0d\xd6\x12\x0d\x94\x90\x2e\x77\x75\x45\xaa\xa9\xd3\xec\x2d\x8e\x23\x8e\x6a\x51\x2f\xa1\x04\x7e\x8d\x6e\x3c\xf0\x59\x0a\x12\x37\xf7\xd0\x81\xe5\x1c\x2a\x3a\x38\x4a\xe4\x48\x7b\x23\xb6\x5b\xa7\x28\x9b\x6a\xb7\xc1\x9a\xf2\xca\xa0\x20\xfc\xac\x91\xdf\xd2\x44\xaa\x97\x24\x2b\x18\x1f\xb0\xb9\x45\x7a\x24\x32\x6a\xb1\x23\x4c\x93\x4a\x0b\x6b\x93\x39\x24\x72\xb7\xd9\xa2\x61\x6c\x2b\xee\x93\x70\x5c\xfe\x51\x4b\x48\x1f\x8d\x11\xaf\xb9\xb2\xee\x6f\x2a\xb3\xec\x8d\x4f\xa2\xee\x5e\x7c\x89\x70\xcb\x67\xad\x2c\xb5\x19\x3b\x91\x63\x1c\x01\x00\xf0\x23\x6a\x8b\xc0\x82\xf4\xba\xc5\x66\x99\xca\x0c\xca\x12\x92\x66\xf1\x03\x2b\x4a\xa6\x54\xa5\xaa\xce\x55\x3b\x41\x4f\xe3\xd4\xab\xa6\x26\xac\xe9\x8c\x4b\x78\xe8\x71\x87\x31\xae\xd5\xcf\x6e\x45\x9d\x64\x45\x14\x8a\x10\x08\x39\x97\xb2\x96\x9f\x56\x4a\xcb\x34\x04\xeb\xa7\xd3\xd6\xba\x0f\xf3\x4c\x8f\x32\x48\x3b\x53\xb7\xed\x2b\xbc\xf8\x71\x3e\xe8\xbd\xaa\x68\xb4\xf7\x5d\x11\xf9\xa2\x24\x16\x1a\x27\xd2\x77\xe7\xc1\x00\xee\xf9\x5a\xfb\xbd\x90\xfb\xfd\xaf\x44\x12\x4a\x5b\x47\x6b\x83\x2d\x1b\x03\xe9\x1a\x54\x0d\xd2\xb5\xa7\x2b\xb5\x69\xf6\x53\xf1\x4d\x08\xee\xb0\x5a\x2c\x50\xbb\x36\x40\x09\x6b\xff\xbd\x3b\x7c\xae\xe8\xc0\xa3\xc1\xb7\x84\xff\xf9\xb2\x30\x83\x24\x4f\x60\x06\x6b\xb8\xbf\x80\xaf\x50\x4c\x77\x8e\x56\x17\xa1\x2f\xd1\x5f\xf1\x40\x5f\x1a\x89\xe9\x29\xb5\x40\xf2\xfa\x83\x0e\x3a\x8c\x3b\x1e\x31\xda\xd5\x34\x64\x9b\x46\x47\x5a\x34\xf2\xf5\xdc\xd6\x82\x44\x2a\xbf\xad\x9f\xe6\xae\x0e\x81\x11\xd4\x07\x49\x30\xb9\x2f\x68\x9a\xfd\xe0\xdc\xe7\x1d\x10\xe7\x87\x03\xab\x7a\xbe\x77\xc5\xc0\xa8\xcd\xbe\x1b\x58\x0f\x0a\x76\x75\xd0\xc2\x3b\x35\xea\x59\x95\x27\xfd\x63\xab\x56\xcd\xce\x17\x2a\xd7\x58\x7f\xa7\xd5\x60\xb1\x84\xc3\x12\xee\xba\xe1\x77\x21\x2f\xc6\x37\xf9\xf3\xeb\x77\x32\xbe\x54\x4e\x3a\x0f\x25\xfc\x77\x5d\x27\xd4\xfa\xee\x69\x5c\xc6\xb9\x45\xd9\xa9\x9e\xee\xf4\xe5\x6c\x30\x4d\x95\x77\x05\x28\x78\xf0\x77\x2d\x40\xcd\x66\x21\x8d\xae\xf7\x8a\x70\x33\xa1\xac\x55\xdf\xb4\xd7\x8d\xa2\x7c\xf2\x3c\x21\xff\xf0\x84\xa8\x7e\x4b\x39\xc6\x35\xcf\xf0\xcd\x06\x67\x0c\x1e\x6f\x37\x43\x47\xba\xcd\x6d\x18\xef\xb6\x67\xbb\xb5\xe4\x47\x5c\x16\xd1\xed\xad\x4f\x7f\x45\x1b\x6d\xb7\x58\x29\xa1\xab\x95\x30\x36\x95\x59\xd1\x67\xf0\x9e\xfd\x78\x0d\x33\x9a\x1f\xcf\xb6\x98\x92\x7d\x4b\x8c\x00\x48\x91\xc6\x13\x86\x1b\x77\x0a\x3d\xb9\x17\x4e\x1b\xc1\xc9\xf6\x2b\x17\x76\x41\xbf\x64\x8c\x69\x4b\x16\xc5\x11\xff\x1b\xd0\x77\x60\x11\xc7\xc7\x2c\xcd\x8a\x28\xfe\x1b\x00\x00\xff\xff\xee\x07\x3a\xfe\x68\x08\x00\x00")

func wwwJavascriptMapzenWhosonfirstRenderJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJavascriptMapzenWhosonfirstRenderJs,
		"www/javascript/mapzen.whosonfirst.render.js",
	)
}

func wwwJavascriptMapzenWhosonfirstRenderJs() (*asset, error) {
	bytes, err := wwwJavascriptMapzenWhosonfirstRenderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/javascript/mapzen.whosonfirst.render.js", size: 2152, mode: os.FileMode(420), modTime: time.Unix(1506645651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCssMapzenWhosonfirstCatalogCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x4b\xce\xdb\x30\x0c\x84\xf7\x3e\x05\x8b\x20\x4b\x05\x6e\xd0\x00\x85\x72\x1a\xda\xa2\x6d\xa2\x7a\x41\x62\x5e\x2d\x72\xf7\xc2\x96\xe2\x3f\x41\xfe\xc0\x2b\x91\xe2\x7c\x63\x8e\x36\x0e\x23\xfc\x6b\x00\x00\x26\xe2\x71\x12\x0d\x87\xb6\x8d\xd7\xe3\x52\xba\xb0\x91\x49\xc3\xcf\xb6\xdd\x1e\x9b\x7b\xd3\xec\x0c\x09\xb2\xcd\x75\xc2\x70\x8e\x16\x6f\xda\x07\x4f\x4b\x5f\xb0\xb3\x54\x9b\x96\x3d\xa9\xaa\xb9\x27\x57\x04\x87\xe0\x45\x0d\xe8\xd8\xde\x34\x64\xf4\x59\x65\x4a\x3c\x3c\xd3\x0a\x6c\x3e\x77\x21\x19\x4a\x2a\x47\xec\xd9\x8f\x1a\x4e\x3e\x93\x14\x4e\xaa\x90\x33\x25\xe1\x1e\xad\x42\xcb\xa3\xd7\x20\x21\x96\xd9\x88\xc6\x2c\x43\xeb\xbf\x38\x4c\x23\xfb\x52\x98\xcf\x8b\xce\x54\x75\x3a\xec\xff\x8c\x29\x9c\xbc\x51\x7d\xb0\x21\xe9\x0d\x99\xf9\x7b\x36\xa2\x21\x07\xcb\x06\x64\x62\x5f\xea\x42\x57\xa9\x64\x4b\x83\xbc\x73\x9e\x0a\xaa\x0b\x22\xc1\xe9\xdd\xba\x8b\xd5\xe2\x6e\x7f\x20\xb7\xd8\x31\xd5\xce\xb7\xc2\xaf\xf7\x3f\xc0\xaa\xd5\x2f\xa7\xf0\x83\x5d\x0c\x49\xd0\x97\xd5\x6d\x1e\x11\x96\xac\x24\xc1\x4a\x2d\xfb\xff\xf5\x7b\xfb\x32\x33\x77\xc2\x99\xd2\x60\xc3\x45\x43\xee\x53\xb0\x76\x51\x8a\xe9\x11\xf5\x92\x6a\xe6\xbf\xa4\xb3\xc3\xb9\xfb\xf6\x9c\xde\x14\x1d\x5e\xd5\xe7\x1b\xf7\xa6\xf9\x1f\x00\x00\xff\xff\xaf\xc9\x0d\x81\x99\x02\x00\x00")

func wwwCssMapzenWhosonfirstCatalogCssBytes() ([]byte, error) {
	return bindataRead(
		_wwwCssMapzenWhosonfirstCatalogCss,
		"www/css/mapzen.whosonfirst.catalog.css",
	)
}

func wwwCssMapzenWhosonfirstCatalogCss() (*asset, error) {
	bytes, err := wwwCssMapzenWhosonfirstCatalogCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/css/mapzen.whosonfirst.catalog.css", size: 665, mode: os.FileMode(420), modTime: time.Unix(1506645651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwCssMapzenWhosonfirstRenderCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xdf\x6a\xf3\x30\x0c\xc5\xef\xf3\x14\xfa\xf8\xd8\xa5\x4b\x57\xd8\x8d\xf7\x34\x4e\xac\x24\x62\xfe\x87\xac\x6c\x2d\xa3\xef\x3e\x12\xbb\xa1\x66\x2d\x8c\x5c\xe9\x28\x3a\xd2\xef\x78\x71\xf0\xdd\x01\x00\x38\xca\xa2\xb2\x5c\x1c\x2a\xb9\x24\xd4\x10\x62\xc0\xf7\xad\xe5\x0d\x4f\x14\xf4\x31\x9d\x4b\x9d\x8c\xb5\x14\xa6\x22\x5c\xbb\xee\x60\x17\x9f\x90\x41\x4c\xef\x70\xb7\x0b\xa8\x66\xa4\x69\x16\x7d\x42\x5f\x06\xc7\x18\x44\x8d\xc6\x93\xbb\x68\xc8\x26\x64\x95\x91\x69\x2c\xcd\x2f\xb2\x32\xeb\xd7\xe3\xf1\xa5\xd4\x7d\x64\x8b\xac\x72\x32\xc3\xba\x0c\x96\x90\x51\x1e\xec\x13\xae\x2b\x3f\x91\x85\x06\xe3\x94\x71\x34\x05\x0d\x12\x53\x7b\x2f\xec\x04\x95\x68\x13\xd6\xba\x71\x9d\xab\x5f\x6f\x86\x8f\x89\xe3\x12\xac\x1a\xa2\x8b\xac\xff\xa3\x5d\xbf\xe6\x3c\x89\xe9\x3e\xaa\xaa\xf6\x51\x24\xfa\xda\xd8\x16\xdc\x35\x1d\x8e\xa2\x21\x47\x47\x16\x64\xa6\x00\xff\xc8\xa7\xc8\x62\x82\x34\x26\xbc\x85\xf7\xe4\xc7\xdd\x54\xf0\x2c\x95\x78\x35\xfe\xcd\xd7\x46\x70\x38\xbd\xa1\x6f\x71\xf5\x48\x9c\x45\x0d\x33\x39\x7b\x43\xbf\x83\x7b\x72\x68\x6b\xe1\xcc\x63\x87\x5b\x10\x7f\x30\x29\x8f\x79\x9b\x7f\x88\xd5\x52\x34\x5a\x4d\xf5\xb0\xeb\x4d\x04\xd7\xee\x27\x00\x00\xff\xff\xcd\x95\x93\x60\xe8\x02\x00\x00")

func wwwCssMapzenWhosonfirstRenderCssBytes() ([]byte, error) {
	return bindataRead(
		_wwwCssMapzenWhosonfirstRenderCss,
		"www/css/mapzen.whosonfirst.render.css",
	)
}

func wwwCssMapzenWhosonfirstRenderCss() (*asset, error) {
	bytes, err := wwwCssMapzenWhosonfirstRenderCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/css/mapzen.whosonfirst.render.css", size: 744, mode: os.FileMode(420), modTime: time.Unix(1506645651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"www/index.html":                                    wwwIndexHtml,
	"www/javascript/mapzen.whosonfirst.catalog.init.js": wwwJavascriptMapzenWhosonfirstCatalogInitJs,
	"www/javascript/mapzen.whosonfirst.catalog.js":      wwwJavascriptMapzenWhosonfirstCatalogJs,
	"www/javascript/mapzen.whosonfirst.render.js":       wwwJavascriptMapzenWhosonfirstRenderJs,
	"www/css/mapzen.whosonfirst.catalog.css":            wwwCssMapzenWhosonfirstCatalogCss,
	"www/css/mapzen.whosonfirst.render.css":             wwwCssMapzenWhosonfirstRenderCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"www": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.catalog.css": &bintree{wwwCssMapzenWhosonfirstCatalogCss, map[string]*bintree{}},
			"mapzen.whosonfirst.render.css":  &bintree{wwwCssMapzenWhosonfirstRenderCss, map[string]*bintree{}},
		}},
		"index.html": &bintree{wwwIndexHtml, map[string]*bintree{}},
		"javascript": &bintree{nil, map[string]*bintree{
			"mapzen.whosonfirst.catalog.init.js": &bintree{wwwJavascriptMapzenWhosonfirstCatalogInitJs, map[string]*bintree{}},
			"mapzen.whosonfirst.catalog.js":      &bintree{wwwJavascriptMapzenWhosonfirstCatalogJs, map[string]*bintree{}},
			"mapzen.whosonfirst.render.js":       &bintree{wwwJavascriptMapzenWhosonfirstRenderJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
